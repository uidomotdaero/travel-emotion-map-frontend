{"version":3,"file":"js/app.b368b333.js","mappings":"sFAYWA,MAAM,sB,SAmDOA,MAAM,iB,GACrBA,MAAM,iB,2FA/DbC,EAAAA,EAAAA,IA2BM,Y,aAzBJA,EAAAA,EAAAA,IAMM,OANDD,MAAM,eAAa,EACtBC,EAAAA,EAAAA,IAGM,OAHDD,MAAM,mBAAiB,EAC1BC,EAAAA,EAAAA,IAA6B,UAAzB,yBACJA,EAAAA,EAAAA,IAAgD,QAA1CD,MAAM,gBAAe,sB,KAI/BC,EAAAA,EAAAA,IAiBO,cAfLA,EAAAA,EAAAA,IAUM,MAVNC,EAUM,EATNC,EAAAA,EAAAA,IAAYC,G,aAEZH,EAAAA,EAAAA,IAMO,gBALPA,EAAAA,EAAAA,IAAqC,MAAjCI,MAAA,iBAAsB,WAC1BJ,EAAAA,EAAAA,IAAgL,SAAzKD,MAAM,gCAA8B,E,QAAC,8BAAyBC,EAAAA,EAAAA,IAAI,O,QAAA,sGACzEA,EAAAA,EAAAA,IAAI,OACJA,EAAAA,EAAAA,IAA2C,MAAvCI,MAAA,iBAAsB,iBAC1BJ,EAAAA,EAAAA,IAAwF,SAAjFD,MAAM,gCAA+B,0C,mBAG5CC,EAAAA,EAAAA,IAGI,KAHDD,MAAM,eAAa,E,QAAC,eACZC,EAAAA,EAAAA,IAA2B,cAAnB,e,QAAmB,OAAEA,EAAAA,EAAAA,IAAI,OAC1CA,EAAAA,EAAAA,IAAuC,cAA/B,2BAA+BA,EAAAA,EAAAA,IAAI,OAAAA,EAAAA,EAAAA,IAAuB,cAAf,W,QAAe,4B,07BAiC1EA,EAAAA,EAAAA,IAcM,aAZJA,EAAAA,EAAAA,IAA2C,UAAlCK,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,WAAAD,EAAAC,aAAAF,KAAW,WAGhBG,EAAAC,Y,WAAXC,EAAAA,EAAAA,IAQM,MARNC,EAQM,EAPJb,EAAAA,EAAAA,IAMM,MANNc,EAMM,EALJd,EAAAA,EAAAA,IAA0D,QAApDD,MAAM,YAAaM,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAO,YAAAP,EAAAO,cAAAR,KAAY,K,aAC5CP,EAAAA,EAAAA,IAAmB,UAAf,cAAU,I,aACdA,EAAAA,EAAAA,IAAiC,SAA9B,8BAA0B,I,aAC7BA,EAAAA,EAAAA,IAA+B,SAA5B,4BAAwB,KAC3BA,EAAAA,EAAAA,IAAyD,UAAjDD,MAAM,YAAaM,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAO,YAAAP,EAAAO,cAAAR,KAAY,Y,6CCnE3CS,GAAG,MAAMZ,MAAA,+B,GAKVL,MAAM,kB,GACHA,MAAM,gB,SAoBeA,MAAM,iB,GAC3BA,MAAM,yB,GAGNA,MAAM,Y,GACNA,MAAM,Q,GAENA,MAAM,U,GACJA,MAAM,gB,uBAQNA,MAAM,gB,GACJA,MAAM,gB,GAGNA,MAAM,mB,GACNA,MAAM,qB,GAIVA,MAAM,U,SAE8BA,MAAM,qB,mBAKkDA,MAAM,gB,mBAqB7DA,MAAM,e,uBAOzCA,MAAM,iB,GAEJA,MAAM,iB,0CAzFnBa,EAAAA,EAAAA,IAuGI,aAtGFZ,EAAAA,EAAAA,IAuBM,MAvBNC,EAuBM,CAtBYS,EAAAO,iB,WAAdL,EAAAA,EAAAA,IAEK,U,MAF0BP,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAU,eAAAV,EAAAU,iBAAAX,IAAeR,MAAM,uB,gBAC3DC,EAAAA,EAAAA,IAA4C,QAAtCmB,KAAK,MAAM,aAAW,QAAO,MAAE,I,QAAO,iBAChD,Q,gBAEDnB,EAAAA,EAAAA,IAgBM,MAhBNa,EAgBM,EAfHb,EAAAA,EAAAA,IAGM,MAHNc,EAGM,E,SAFJd,EAAAA,EAAAA,IAAwG,SAAjGoB,KAAK,QAAQJ,GAAG,gBAAgBK,MAAM,K,qCAAcX,EAAAY,cAAaC,GAAGC,SAAMlB,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAiB,qBAAAjB,EAAAiB,uBAAAlB,K,iBAAxBG,EAAAY,iB,eAC3DtB,EAAAA,EAAAA,IAA0C,SAAnC0B,IAAI,iBAAgB,WAAO,M,eAOpC1B,EAAAA,EAAAA,IAIM,OAJDD,MAAM,yBAAuB,EAEhCC,EAAAA,EAAAA,IAA2E,SAApEoB,KAAK,QAAQJ,GAAG,wBAAwBK,MAAM,aAAaM,SAAA,MAClE3B,EAAAA,EAAAA,IAAiF,SAA1E0B,IAAI,wBAAwB3B,MAAM,kBAAiB,qB,QAQnDW,EAAAkB,kB,WAAXhB,EAAAA,EAAAA,IA2EM,MA3ENiB,EA2EM,EA1EJ7B,EAAAA,EAAAA,IAyEI,MAzEJ8B,EAyEI,EAxEF9B,EAAAA,EAAAA,IAA0D,QAApDD,MAAM,YAAaM,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAO,YAAAP,EAAAO,cAAAR,KAAY,MAC5CP,EAAAA,EAAAA,IAAoC,WAAA+B,EAAAA,EAAAA,IAA7BrB,EAAAkB,gBAAgBI,OAAK,IAC5BhC,EAAAA,EAAAA,IAA+E,IAA/EiC,EAA+E,C,eAA3DjC,EAAAA,EAAAA,IAAoB,cAAZ,OAAG,K,QAAS,KAAC+B,EAAAA,EAAAA,IAAGrB,EAAAkB,gBAAgBM,cAAY,MACxElC,EAAAA,EAAAA,IAAqF,IAArFmC,EAAqF,C,eAArEnC,EAAAA,EAAAA,IAAoB,cAAZ,OAAG,K,QAAS,KAAC+B,EAAAA,EAAAA,IAAGvB,EAAA4B,WAAW1B,EAAAkB,gBAAgBS,aAAU,MAE7ErC,EAAAA,EAAAA,IAAgF,IAAhFsC,EAAgF,C,eAA9DtC,EAAAA,EAAAA,IAAqB,cAAb,QAAI,K,QAAS,KAAC+B,EAAAA,EAAAA,IAAGrB,EAAAkB,gBAAgBW,QAAU,MAAJ,MACjEvC,EAAAA,EAAAA,IAKM,MALNwC,EAKM,G,aAJJ5B,EAAAA,EAAAA,IAG6C6B,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAHhBlC,EAAAmC,iBAAgB,CAA/BC,EAAKC,M,WAAnBjC,EAAAA,EAAAA,IAG6C,QAF5CkC,IAAKD,EACN9C,MAAM,MACLM,QAAKkB,GAAEf,EAAAuC,aAAaF,K,QAAWD,GAAG,EAAAI,K,QAILtC,EAAAkB,iBAAmBlB,EAAAkB,gBAAgBqB,mB,WAAnErC,EAAAA,EAAAA,IAOM,MAPNsC,EAOM,EANJlD,EAAAA,EAAAA,IAEM,MAFNmD,EAEM,EADJnD,EAAAA,EAAAA,IAAiE,KAA7DD,OAAKqD,EAAAA,EAAAA,IAAE5C,EAAA6C,eAAe3C,EAAAkB,gBAAgBqB,oB,WAE5CjD,EAAAA,EAAAA,IAEM,MAFNsD,EAEM,EADJtD,EAAAA,EAAAA,IAAuE,IAAvEuD,GAAuExB,EAAAA,EAAAA,IAAvCrB,EAAAkB,gBAAgBqB,kBAAgB,S,gBAIpEjD,EAAAA,EAAAA,IAAsD,IAAtDwD,GAAsDzB,EAAAA,EAAAA,IAAjCrB,EAAAkB,gBAAgB6B,YAAU,GAEpC/C,EAAAkB,gBAAgB8B,a,WAA3B9C,EAAAA,EAAAA,IAGM,MAHN+C,EAGM,EAFJ3D,EAAAA,EAAAA,IACiD,UADxC4D,IAAKpD,EAAAqD,mBAAmBnD,EAAAkB,gBAAgB8B,YACzCI,YAAY,IAAIC,gBAAA,I,6BAGfrD,EAAAkB,iBAAmBlB,EAAAkB,gBAAgBoC,UAAYtD,EAAAkB,gBAAgBoC,SAASC,OAAS,I,WAA5FrD,EAAAA,EAAAA,IA0BM,MA1BNsD,EA0BM,EAzBJlE,EAAAA,EAAAA,IAiBM,OAjBDD,MAAM,uBAAwBoE,YAAS7D,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAA4D,aAAA5D,EAAA4D,eAAA7D,IACX8D,UAAO/D,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAA8D,WAAA9D,EAAA8D,aAAA/D,IACTgE,aAAUjE,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAA8D,WAAA9D,EAAA8D,aAAA/D,IACZiE,YAASlE,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAiE,YAAAjE,EAAAiE,cAAAlE,IACXmE,aAAUpE,EAAA,MAAAA,EAAA,QAAAC,IAAEC,EAAA4D,aAAA5D,EAAA4D,eAAA7D,IACZoE,WAAQrE,EAAA,MAAAA,EAAA,QAAAC,IAAEC,EAAA8D,WAAA9D,EAAA8D,aAAA/D,IACVqE,YAAStE,EAAA,MAAAA,EAAA,QAAAC,IAAEC,EAAAiE,YAAAjE,EAAAiE,cAAAlE,K,EAE5CP,EAAAA,EAAAA,IAA6G,OAAvG4D,IAAG,uCAAyCpD,EAAAqE,uBAAwBC,IAAI,QAAQ/E,MAAM,gB,UAG9EW,EAAAqE,eAAed,OAAS,I,WAAtCrD,EAAAA,EAAAA,IAES,U,MAFiCP,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAwE,WAAAxE,EAAAwE,aAAAzE,IAAWR,MAAM,gB,gBAChEC,EAAAA,EAAAA,IAAmC,KAAhCD,MAAM,uBAAqB,c,eAElBW,EAAAqE,eAAed,OAAS,I,WAAtCrD,EAAAA,EAAAA,IAES,U,MAFiCP,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAyE,WAAAzE,EAAAyE,aAAA1E,IAAWR,MAAM,gB,gBAChEC,EAAAA,EAAAA,IAAoC,KAAjCD,MAAM,wBAAsB,c,oBAKxBW,EAAAqE,eAAed,OAAS,I,WAAnCrD,EAAAA,EAAAA,IAIM,MAJNsE,EAIM,G,aAHJtE,EAAAA,EAAAA,IAE6C6B,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFlBhC,EAAAqE,eAAc,CAA3BI,EAAGtC,M,WAAjBjC,EAAAA,EAAAA,IAE6C,QAFDkC,IAAKD,EAC1C9C,OAAKqD,EAAAA,EAAAA,IAAA,cAAiB1C,EAAA0E,oBAAsBvC,IAC5CxC,QAAKkB,GAAEf,EAAA6E,gBAAgBxC,I,yDAIDnC,EAAAkB,kB,WAAjChB,EAAAA,EAAAA,IAaM,MAbN0E,EAaM,C,eAZJtF,EAAAA,EAAAA,IAAuC,KAApCD,MAAM,eAAc,gBAAY,KACnCC,EAAAA,EAAAA,IAUM,MAVNuF,EAUM,EATJvF,EAAAA,EAAAA,IAES,UAFAK,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,EAAAgF,cAAAhF,EAAAgF,gBAAAjF,IAAcR,MAAM,sBAAsBiC,MAAM,W,gBAC9DhC,EAAAA,EAAAA,IAA8B,KAA3BD,MAAM,kBAAgB,aAE3BC,EAAAA,EAAAA,IAES,UAFAK,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,EAAAiF,gBAAAjF,EAAAiF,kBAAAlF,IAAgBR,MAAM,wBAAwBiC,MAAM,U,gBAClEhC,EAAAA,EAAAA,IAA8B,KAA3BD,MAAM,kBAAgB,aAE3BC,EAAAA,EAAAA,IAES,UAFAK,QAAKC,EAAA,MAAAA,EAAA,QAAAC,IAAEC,EAAAkF,iBAAAlF,EAAAkF,mBAAAnF,IAAiBR,MAAM,yBAAyBiC,MAAM,W,gBACpEhC,EAAAA,EAAAA,IAAiC,KAA9BD,MAAM,qBAAmB,kB,2JAW1C,GACE4F,QAAS,CACPC,MAAO,YAGTC,KAAM,WACNC,IAAAA,GACE,MAAO,CACLC,IAAK,KACLC,yBAA0B,KAC1BC,gBAAiB,GACjBC,cAAe,GACfC,qBAAsB,CAAC,EACvBlF,gBAAgB,EAChBW,gBAAiB,KACjBwE,eAAgB,GAEhBC,UAAW,GACXC,kBAAmB,GACnBC,eAAgB,GAChBC,uBAAwB,GACxBlF,cAAe,KAEf8D,kBAAmB,EACnBL,eAAgB,GAEhB0B,YAAY,EACZC,WAAY,EACZC,SAAU,EAEVC,YAAY,EAEhB,EACAC,OAAAA,GAEE,GAAIC,OAAOlB,OAASkB,OAAOlB,MAAMmB,KAC/BC,KAAKC,cACA,CACL,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOtD,IAAM,yFACbsD,EAAOG,OAAS,KACdP,OAAOlB,MAAMmB,KAAKO,KAAK,KACrBN,KAAKC,aAGTE,SAASI,KAAKC,YAAYN,EAC5B,CACF,EACAO,QAAS,CACPR,OAAAA,GACE,MAAMS,EAAYP,SAASQ,eAAe,OACpCC,EAAU,CACdC,OAAQ,IAAIf,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,OAC3CC,MAAO,IAETf,KAAKjB,IAAM,IAAIe,OAAOlB,MAAMmB,KAAKiB,IAAIN,EAAWE,GAGhDZ,KAAKiB,8BAKLjB,KAAKvF,qBAQP,EAGA,sBAAMyG,CAAkBC,EAAKC,GAC3B,MAAMC,EAAU,mCAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,kDAAmD,CAClFC,OAAQ,CACNN,IAAKA,EACLO,IAAKN,EACLO,MAAON,EACPO,MAAO,SACPC,KAAM,QAIV,MAAO,CACLC,UAAWR,EAASxC,KAAKiD,QAAQ,GAAGC,YACpCC,YAAaC,KAAKC,MAAMb,EAASxC,KAAKsD,KAAKC,MAC3CC,SAAUhB,EAASxC,KAAKsD,KAAKE,SAC7BC,UAAWjB,EAASxC,KAAK0D,KAAKC,MAC9BC,KAAMpB,EAASxC,KAAKiD,QAAQ,GAAGW,KAEnC,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAM,uBAAwBA,GAC/B,IACT,CACF,EAGA,wBAAME,CAAoBC,GAOxB,GANA9C,KAAKpF,gBAAkB,IAClBkI,EACH7G,iBAAkB6G,EAAQ7G,kBAAoB,UAI3C+D,KAAKpF,gBAAgBmI,aAAe/C,KAAKpF,gBAAgBuG,KAAOnB,KAAKpF,gBAAgBwG,IAAK,CAC7F,MAAM2B,QAAoB/C,KAAKkB,iBAC7BlB,KAAKpF,gBAAgBuG,IACrBnB,KAAKpF,gBAAgBwG,KAGnB2B,GAEF/C,KAAKgD,KAAKhD,KAAKpF,gBAAiB,cAAemI,EAEnD,CACF,EAGA1G,cAAAA,CAAgByF,GAEd,IAAKA,EAAW,MAAO,eAEvB,OAAQA,GACN,IAAK,KACH,MAAO,aACT,IAAK,KACH,MAAO,eACT,IAAK,IACH,MAAO,oBACT,IAAK,IACH,MAAO,mBACT,QACE,MAAO,eAEb,EAGAmB,iBAAAA,GACMjD,KAAKpF,iBAAmBoF,KAAKpF,gBAAgBoC,WAC/CgD,KAAKjC,eAAiBiC,KAAKpF,gBAAgBoC,SAASkG,MAAM,KACvDnE,IAAIoE,GAAYA,EAASC,QACzBC,OAAOF,GAAYA,GACtBnD,KAAK5B,kBAAoB,EAE7B,EAGAH,SAAAA,GACM+B,KAAKjC,eAAed,OAAS,IAC/B+C,KAAK5B,mBAAqB4B,KAAK5B,kBAAoB,GAAK4B,KAAKjC,eAAed,QAG9E,MAAMqG,EAAenD,SAASoD,cAAc,iBAC5CD,EAAalK,MAAMoK,QAAU,IAG7BC,WAAW,KACTzD,KAAK5B,mBAAqB4B,KAAK5B,kBAAoB,GAAK4B,KAAKjC,eAAed,OAE5EwG,WAAW,KACTH,EAAalK,MAAMoK,QAAU,KAC5B,KACF,IACL,EAGAzH,YAAAA,CAAcF,GACZ,MAAM6H,EAAcvD,SAASwD,iBAAiB,QAC9CD,EAAY7H,GAAO+H,UAAUC,IAAI,iBAEjCJ,WAAW,KACTC,EAAY7H,GAAO+H,UAAUE,OAAO,kBACnC,IACL,EAGA9F,SAAAA,GACMgC,KAAKjC,eAAed,OAAS,IAC/B+C,KAAK5B,mBAAqB4B,KAAK5B,kBAAoB,EAAI4B,KAAKjC,eAAed,QAAU+C,KAAKjC,eAAed,OAE7G,EAGAoB,eAAAA,CAAiBxC,GACfmE,KAAK5B,kBAAoBvC,CAC3B,EAGAkI,cAAAA,GACE/D,KAAKX,UAAU2E,QAAQC,GAAUA,EAAOC,OAAO,OAC/ClE,KAAKV,kBAAkB0E,QAAQC,GAAUA,EAAOC,OAAO,MACzD,EAGAzJ,mBAAAA,GACEuF,KAAK+D,iBAEsB,OAAvB/D,KAAK1F,cAEP0F,KAAKmE,iBAC2B,eAAvBnE,KAAK1F,eAEd0F,KAAKoE,wBAET,EAGAC,YAAAA,CAAcC,EAAQlK,GACpBmH,EAAAA,EAAMC,IAAI8C,GACPC,KAAKjD,IACS,OAATlH,GACF4F,KAAKT,eAAiB+B,EAASxC,KAC/BkB,KAAKwE,cAAcxE,KAAKT,eAAgB,MACxCS,KAAKX,UAAU2E,QAAQC,GAAUA,EAAOC,OAAOlE,KAAKjB,OAClC,eAAT3E,IACT4F,KAAKR,uBAAyB8B,EAASxC,KACvCkB,KAAKwE,cAAcxE,KAAKR,uBAAwB,cAChDQ,KAAKV,kBAAkB0E,QAAQC,GAAUA,EAAOC,OAAOlE,KAAKjB,SAG/D0F,MAAM9B,IACLC,QAAQD,MAAM,GAAGvI,kBAAsBuI,GAEvC+B,MAAM,oBAAoBtK,OAEhC,EAGA+J,cAAAA,GAIE5C,EAAAA,EAAMC,IAAI,uEACP+C,KAAKjD,IACJtB,KAAKwE,cAAclD,EAASxC,KAAM,MAElCkB,KAAKX,UAAU2E,QAAQC,GAAUA,EAAOC,OAAOlE,KAAKjB,QAErD0F,MAAM9B,GAASC,QAAQD,MAAM,kBAAmBA,GACrD,EAGAyB,sBAAAA,GACE7C,EAAAA,EAAMC,IAAI,2EACP+C,KAAKjD,IACJtB,KAAKwE,cAAclD,EAASxC,KAAM,cAElCkB,KAAKV,kBAAkB0E,QAAQC,GAAUA,EAAOC,OAAOlE,KAAKjB,QAE7D0F,MAAM9B,GAASC,QAAQD,MAAM,oBAAqBA,GACvD,EAGA6B,aAAAA,CAAeG,EAAUvK,GAEV,OAATA,EAAe4F,KAAKX,UAAY,GAClB,eAATjF,IAAuB4F,KAAKV,kBAAoB,IACzDqF,EAASX,QAAQlB,IACf,IAAI8B,EAAc,KACdC,EAAS,EACb,MAAMC,EAAa,IAAIlG,MAAMmB,KAAKgF,KAAK,GAAI,IAE9B,OAAT3K,GAEFwK,EAAc,IAAIhG,MAAMmB,KAAKiF,YAC3B,oDACAF,GAEFD,EAAS,GACS,eAATzK,IAETwK,EAAc,IAAIhG,MAAMmB,KAAKiF,YAC3B,4DACA,IAAIpG,MAAMmB,KAAKgF,KAAK,GAAI,KAE1BF,EAAS,GAGX,MAAMZ,EAAS,IAAIrF,MAAMmB,KAAKkF,OAAO,CACnCC,SAAU,IAAItG,MAAMmB,KAAKe,OAAOgC,EAAQqC,SAAUrC,EAAQsC,WAC1DC,MAAOT,EACPC,OAAQA,EACR9F,IAAK,OAIPH,MAAMmB,KAAKuF,MAAMC,YAAYtB,EAAQ,QAAS,KAC5CjE,KAAKwF,kBAAkB1C,KAGZ,OAAT1I,EACF4F,KAAKX,UAAUoG,KAAKxB,GACF,eAAT7J,GACT4F,KAAKV,kBAAkBmG,KAAKxB,IAGlC,EAGAyB,aAAAA,GACE1F,KAAKX,UAAU2E,QAAQC,IACrBA,EAAOC,OAAOlE,KAAK2F,YAAc3F,KAAKjB,IAAM,OAEhD,EAGA6G,qBAAAA,GACE5F,KAAKV,kBAAkB0E,QAAQC,IAC7BA,EAAOC,OAAOlE,KAAK6F,oBAAsB7F,KAAKjB,IAAM,OAExD,EAGAP,YAAAA,GAEMsB,OAAOgG,OACJhG,OAAOgG,MAAMC,iBAEhBjG,OAAOgG,MAAME,KAAK,sBAGpBlG,OAAOgG,MAAMG,KAAKC,YAAY,CAC5BC,WAAY,WACZC,QAASpG,KAAKpF,gBAAgBM,aAC9BmL,aAAcrG,KAAKpF,gBAAgBI,MACnCsL,QAAS,CACPtL,MAAOgF,KAAKpF,gBAAgBI,MAC5BgH,YAAahC,KAAKpF,gBAAgB6B,WAAW8J,UAAU,EAAG,IAAM,MAChEvJ,SAAUgD,KAAKpF,gBAAgBoC,SAAW,WAAagD,KAAKpF,gBAAgBoC,SAAS,GAAK,GAC1FwJ,KAAM,CACJC,aAAc3G,OAAO4G,SAASC,KAC9BC,OAAQ9G,OAAO4G,SAASC,OAG5BE,QAAS,CACP,CACE7L,MAAO,WACPwL,KAAM,CACJC,aAAc3G,OAAO4G,SAASC,KAC9BC,OAAQ9G,OAAO4G,SAASC,WAMhCjC,MAAM,0BAEV,EAGAjG,cAAAA,GACE,MAAMqI,EAAO,GAAG9G,KAAKpF,gBAAgBI,WAAWgF,KAAKpF,gBAAgB6B,WAAW8J,UAAU,EAAG,SACvFQ,EAAMjH,OAAO4G,SAASC,KACtBK,EAAW,yCAAyCC,mBAAmBH,UAAaG,mBAAmBF,KAC7GjH,OAAOoH,KAAKF,EAAU,SACxB,EAGAtI,eAAAA,GACE,MAAMqI,EAAMjH,OAAO4G,SAASC,KACtBK,EAAW,gDAAgDC,mBAAmBF,KACpFjH,OAAOoH,KAAKF,EAAU,SACxB,EAGA/F,2BAAAA,GACEkG,MAAM,8CACH5C,KAAKjD,IACJ,IAAKA,EAAS8F,GACZ,MAAM,IAAIC,MAAM,uBAAuB/F,EAASgG,UAElD,OAAOhG,EAASiG,SAEjBhD,KAAKiD,IACJxH,KAAKhB,yBAA2BwI,EAAYC,SAC5CzH,KAAK0H,yBAENjD,MAAM9B,IACLC,QAAQD,MAAM,wBAAyBA,GACvC+B,MAAM,0BAEZ,EAEAgD,oBAAAA,GACE1H,KAAK2H,kBAEL,MAAMC,EAAyB,IAAIC,IAEnC7H,KAAKhB,yBAAyBgF,QAAQ8D,IACpC,MAAMC,EAASD,EAAQE,WAAWD,OAClC,GAAKA,IAGL/H,KAAKiI,YAAYH,EAAS9H,KAAKkI,eAAeH,GAAS,aAGlDH,EAAuBO,IAAIJ,IAAS,CACvC,MAAMlH,EAASb,KAAKoI,kBAAkBL,GAChCM,EAAerI,KAAKsI,mBAAmBP,EAAQ,gBAE/CQ,EAAe,IAAIzI,OAAOlB,MAAMmB,KAAKyI,cAAc,CACvDtD,SAAUrE,EACVyF,QAAS+B,EACTI,QAAS,EACT1J,IAAKiB,KAAKjB,MAIZsJ,EAAaK,QAAU,KACrB1I,KAAK2I,mBAAmBZ,EAAQlH,EAAQb,KAAK4I,qBAAqBb,KAGpE/H,KAAKd,cAAcuG,KAAK8C,GACxBX,EAAuB/D,IAAIkE,EAC7B,IAGF/H,KAAK/F,gBAAiB,EACtB+F,KAAKjB,IAAI8J,UAAU,IAAI/I,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,QACtDd,KAAKjB,IAAI+J,SAAS,GACpB,EAGAH,kBAAAA,CAAoBI,EAAsBlI,EAAQE,GAChDf,KAAK2H,kBAGL,MAAMqB,EAAyBhJ,KAAKhB,yBAAyBiK,KAC3DC,GAAKA,EAAElB,WAAWD,SAAWgB,GAE/B,GAA6C,iBAAzCC,EAAuBG,SAAS/O,KAElC4O,EAAuBG,SAASC,YAAYpF,QAAQqF,IAClD,MAAMC,EAAOD,EAAc,GAAGtK,IAAIwK,GAChC,IAAIzJ,OAAOlB,MAAMmB,KAAKe,OAAOyI,EAAM,GAAIA,EAAM,KAGzCC,EAAU,IAAI1J,OAAOlB,MAAMmB,KAAK0J,QAAQ,CAC5C1K,IAAKiB,KAAKjB,IACVuK,KAAMA,EACNI,aAAc,EACdC,YAAa3J,KAAKkI,eAAea,GACjCa,cAAe,EACfC,YAAa,IAGf7J,KAAKf,gBAAgBwG,KAAK+D,SAEvB,CAEL,MAAMF,EAAON,EAAuBG,SAASC,YAAY,GAAGrK,IAC1DwK,GAAS,IAAIzJ,OAAOlB,MAAMmB,KAAKe,OAAOyI,EAAM,GAAIA,EAAM,KAGlDC,EAAU,IAAI1J,OAAOlB,MAAMmB,KAAK0J,QAAQ,CAC5C1K,IAAKiB,KAAKjB,IACVuK,KAAMA,EACNI,aAAc,EACdC,YAAa3J,KAAKkI,eAAea,GACjCa,cAAe,EACfC,YAAa,IAGf7J,KAAKf,gBAAgBwG,KAAK+D,EAC5B,CACAxJ,KAAKjB,IAAI8J,UAAUhI,GACnBb,KAAKjB,IAAI+J,SAAS/H,GAClBf,KAAK/F,gBAAiB,CACxB,EAEA6P,gBAAAA,CAAkBC,EAAkBlJ,EAAQE,GAE1CgJ,EAAiB/F,QAAQ8D,IACvB,MAAMkC,EAAelC,EAAQE,WAAWiC,OAClCC,EAAelK,KAAKmK,iBAAiBH,GAE3ChK,KAAKiI,YAAYH,EAASoC,EAAc,YAGxC,MAAME,EAAcpK,KAAKqK,iBAAiBvC,EAAQqB,UAClD,GAAIiB,EAAa,CACf,MAAM/B,EAAerI,KAAKsI,mBAAmBR,EAAQE,WAAWsC,MAAO,mBACjE/B,EAAe,IAAIzI,OAAOlB,MAAMmB,KAAKyI,cAAc,CACvDtD,SAAUkF,EACV9D,QAAS+B,EACTtJ,IAAKiB,KAAKjB,IACV0J,QAAS,IAEXzI,KAAKd,cAAcuG,KAAK8C,EAC1B,IAGFvI,KAAKjB,IAAI8J,UAAUhI,GACnBb,KAAKjB,IAAI+J,SAAS/H,GAClBf,KAAK/F,gBAAiB,CACxB,EAGAgO,WAAAA,CAAaH,EAASyC,EAAWnQ,EAAO,WACtC,MAAMoQ,EAAQ,GAEd,GAA8B,iBAA1B1C,EAAQqB,SAAS/O,KACnB0N,EAAQqB,SAASC,YAAYpF,QAAQqF,IACnC,MAAMC,EAAOD,EAAc,GAAGtK,IAAIwK,GAAS,IAAIzJ,OAAOlB,MAAMmB,KAAKe,OAAOyI,EAAM,GAAIA,EAAM,KACxFiB,EAAM/E,KAAK6D,SAER,IAA8B,YAA1BxB,EAAQqB,SAAS/O,KAK1B,YADAwI,QAAQ6H,KAAK,oBAAqB3C,EAAQqB,SAAS/O,MAJL,CAC9C,MAAMkP,EAAOxB,EAAQqB,SAASC,YAAY,GAAGrK,IAAIwK,GAAS,IAAIzJ,OAAOlB,MAAMmB,KAAKe,OAAOyI,EAAM,GAAIA,EAAM,KACvGiB,EAAM/E,KAAK6D,EACb,CAGA,CAEAkB,EAAMxG,QAAQsF,IACZ,MAAME,EAAU,IAAI1J,OAAOlB,MAAMmB,KAAK0J,QAAQ,CAC5C1K,IAAKiB,KAAKjB,IACVuK,KAAMA,EACNI,aAAwB,aAATtP,EAAsB,EAAI,GACzCuP,YAAa,UACbC,cAAyB,aAATxP,EAAsB,GAAM,GAC5CmQ,UAAWA,EACXV,YAAuB,aAATzP,EAAsB,GAAM,KAI5C0F,OAAOlB,MAAMmB,KAAKuF,MAAMC,YAAYiE,EAAS,YAAa,KACxDA,EAAQkB,WAAW,CAAEb,YAAuB,aAATzP,EAAsB,GAAM,EAAMsP,aAAwB,aAATtP,EAAsB,EAAI,OAEhH0F,OAAOlB,MAAMmB,KAAKuF,MAAMC,YAAYiE,EAAS,WAAY,KACvDA,EAAQkB,WAAW,CAAEb,YAAuB,aAATzP,EAAsB,GAAM,GAAMsP,aAAwB,aAATtP,EAAsB,EAAI,OAInG,aAATA,EACF0F,OAAOlB,MAAMmB,KAAKuF,MAAMC,YAAYiE,EAAS,QAAS,KACpDxJ,KAAK2I,mBACHb,EAAQE,WAAWD,OACnB/H,KAAKoI,kBAAkBN,EAAQE,WAAWD,QAC1C/H,KAAK4I,qBAAqBd,EAAQE,WAAWD,WAG/B,aAAT3N,GACT0F,OAAOlB,MAAMmB,KAAKuF,MAAMC,YAAYiE,EAAS,QAAS,QAKxDxJ,KAAKf,gBAAgBwG,KAAK+D,IAE9B,EAGA7B,eAAAA,GACE3H,KAAKf,gBAAgB+E,QAAQ2G,GAAKA,EAAEzG,OAAO,OAC3ClE,KAAKf,gBAAkB,GACvBe,KAAKd,cAAc8E,QAAQ4G,GAAKA,EAAE1G,OAAO,OACzClE,KAAKd,cAAgB,EACvB,EAEAoJ,kBAAAA,CAAoBxB,EAAM+D,GACxB,MAAMC,EAAU3K,SAASC,cAAc,OAkBvC,OAjBA0K,EAAQD,UAAYA,EACpBC,EAAQC,UAAYjE,EACpBgE,EAAQ1R,MAAM4R,QAAU,kXAaxBF,EAAQG,YAAc,KAAQH,EAAQ1R,MAAM8R,gBAAkB,2BAA4BJ,EAAQ1R,MAAM+R,MAAQ,SAChHL,EAAQM,WAAa,KAAQN,EAAQ1R,MAAM8R,gBAAkB,2BAA4BJ,EAAQ1R,MAAM+R,MAAQ,SACxGL,CACT,EAEA5Q,aAAAA,GACE8F,KAAK2H,kBACL3H,KAAK0H,uBAEL1H,KAAKjB,IAAI8J,UAAU,IAAI/I,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,QACtDd,KAAKjB,IAAI+J,SAAS,IAElB9I,KAAK/F,gBAAiB,CACxB,EAGAmO,iBAAAA,CAAmBL,GACjB,MAAMsD,EAAU,CACdC,QAAO,IAAIxL,OAAOlB,MAAMmB,KAAKe,OAAO,UAAW,aAC/CyK,QAAO,IAAIzL,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC7C0K,QAAO,IAAI1L,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC7C2K,QAAO,IAAI3L,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC7C4K,QAAO,IAAI5L,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC7C6K,QAAO,IAAI7L,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC7C8K,QAAO,IAAI9L,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC7C+K,UAAS,IAAI/L,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,SAC/CgL,MAAK,IAAIhM,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC3CiL,UAAS,IAAIjM,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,UAC/CkL,OAAM,IAAIlM,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,OACzCmL,OAAM,IAAInM,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,OACzCoL,UAAS,IAAIpM,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,OAC5CqL,OAAM,IAAIrM,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,OACzCsL,OAAM,IAAItM,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,OACzCuL,OAAM,IAAIvM,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,OACzCwL,UAAS,IAAIxM,OAAOlB,MAAMmB,KAAKe,OAAO,QAAS,WAEjD,OAAOuK,EAAQtD,IAAW,IAAIjI,OAAOlB,MAAMmB,KAAKe,OAAO,KAAM,MAC/D,EAEA8H,oBAAAA,CAAsBb,GACpB,MAAMwE,EAAS,CACbjB,QAAO,EACPC,QAAO,EACPC,QAAO,EACPC,QAAO,EACPC,QAAO,EACPC,QAAO,EACPC,QAAO,EACPC,UAAS,EACTC,MAAK,EACLC,UAAS,EACTC,OAAM,EACNC,OAAM,EACNC,UAAS,EACTC,OAAM,EACNC,OAAM,EACNC,OAAM,EACNC,UAAS,GAEX,OAAOC,EAAOxE,IAAW,CAC3B,EAEAsC,gBAAAA,CAAkBlB,GAChB,IAAIqD,EAAS,EACTC,EAAS,EACTC,EAAQ,EAEZ,MAAMC,EAAiBC,IACrBA,EAAY5I,QAAQuF,IAClBiD,GAAUjD,EAAM,GAChBkD,GAAUlD,EAAM,GAChBmD,OAYJ,MARsB,iBAAlBvD,EAAS/O,KACX+O,EAASC,YAAYpF,QAAQqF,IAC3BsD,EAActD,EAAc,MAEH,YAAlBF,EAAS/O,MAClBuS,EAAcxD,EAASC,YAAY,IAGjCsD,EAAQ,EACH,IAAI5M,OAAOlB,MAAMmB,KAAKe,OAAO0L,EAASE,EAAOD,EAASC,GAExD,IACT,EAGAxE,cAAAA,CAAgBH,GACd,MAAM8E,EAAiB,CACrBvB,QAAO,UACPC,QAAO,UACPC,QAAO,UACPC,QAAO,UACPC,QAAO,UACPC,QAAO,UACPC,QAAO,UACPC,UAAS,UACTC,MAAK,UACLC,UAAS,UACTC,OAAM,UACNC,OAAM,UACNC,UAAS,UACTC,OAAM,UACNC,OAAM,UACNC,OAAM,UACNC,UAAS,WAEX,OAAOO,EAAe9E,IAAW/H,KAAK8M,gBACxC,EAEA3C,gBAAAA,CAAkB4C,GAChB,MAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC1K,IAAIC,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAM9P,OAAQiQ,IAChCD,EAAOF,EAAMI,WAAWD,KAAOD,GAAQ,GAAKA,GAE9C,MAAMpR,EAAQqG,KAAKkL,IAAIH,EAAOD,EAAO/P,QACrC,OAAO+P,EAAOnR,EAChB,EAEAiR,cAAAA,GACE,MAAMO,EAAU,mBAChB,IAAIlC,EAAQ,IACZ,IAAK,IAAI+B,EAAI,EAAGA,EAAI,EAAGA,IACrB/B,GAASkC,EAAQnL,KAAKoL,MAAsB,GAAhBpL,KAAKqL,WAEnC,OAAOpC,CACT,EACAqC,gBAAAA,GACErG,MAAM,QACH5C,KAAKjD,GAAYA,EAASiG,QAC1BhD,KAAKzF,IAEJA,EAAKkF,QAAQyJ,IAEXzN,KAAK0N,iBACHD,EAAKtI,SACLsI,EAAKrI,UACLqI,EAAKE,YAAcF,EAAKE,YAAYzK,MAAM,KAAK,GAAK,OACpDuK,OAILhJ,MAAM9B,GAASC,QAAQD,MAAM,gBAAiBA,GACnD,EACA+K,gBAAAA,CAAkBvM,EAAKC,EAAK0B,EAAS8K,GAEnC,MAAM1I,EAAW,IAAIpF,OAAOlB,MAAMmB,KAAKe,OAAOK,EAAKC,GAGnD,IAAIyM,EAAc,UACdC,EAAc,KAGF,OAAZhL,GAAgC,QAAZA,GACtB+K,EAAc,UACdC,EAAc,MACO,OAAZhL,GAAgC,OAAZA,GAC7B+K,EAAc,UACdC,EAAc,MACO,OAAZhL,GAAgC,OAAZA,GAC7B+K,EAAc,UACdC,EAAc,MACO,QAAZhL,GAAiC,OAAZA,IAC9B+K,EAAc,UACdC,EAAc,MAIhB,MAAMxH,EAAU,oEAEEuH,qTAclBC,sBAKMC,EAAgB,IAAIjO,OAAOlB,MAAMmB,KAAKyI,cAAc,CACxDtD,SAAUA,EACVoB,QAASA,EACTmC,QAAS,IAIXsF,EAAc7J,OAAOlE,KAAKjB,KAGrBiB,KAAKZ,iBACRY,KAAKZ,eAAiB,IAExBY,KAAKZ,eAAeqG,KAAKsI,GAIzB,MAAMC,EAAgBD,EAAcE,EAChCD,IACFA,EAActF,QAAU,KAEtB1I,KAAKvF,sBACLuF,KAAKwF,kBAAkBoI,IAG7B,EAEApI,iBAAAA,CAAmBoI,GACjB5N,KAAKpF,gBAAkBgT,EAEvB5N,KAAK6C,mBAAmB+K,GAGpBA,EAAY5Q,UAA4C,kBAAzB4Q,EAAY5Q,UAAyB4Q,EAAY5Q,SAASC,OAAS,GAIpG+C,KAAKjC,eAAiB6P,EAAY5Q,SAASkG,MAAM,KAC9CnE,IAAIoE,GAAYA,EAASC,QACzBC,OAAOF,GAAYA,GAEtBnD,KAAK5B,kBAAoB,IAEzB4B,KAAKjC,eAAiB,GACtBiC,KAAK5B,kBAAoB,EAE7B,EAEArE,UAAAA,GACEiG,KAAKpF,gBAAkB,KAEnBoF,KAAKpF,kBACPuF,SAASoD,cAAc,kBAAkBK,UAAUC,IAAI,WAGvDJ,WAAW,KACTzD,KAAKpF,gBAAkB,KACnBoF,KAAKkO,MAAMC,cACbnO,KAAKkO,MAAMC,YAAYC,QACvBpO,KAAKqO,WAAY,IAElB,KAEP,EAEAjT,UAAAA,CAAYkT,GACV,IAAKA,EAAY,MAAO,GACxB,MAAMC,EAAO,IAAIC,KAAKF,GACtB,MAAO,GAAGC,EAAKE,kBAAkBF,EAAKG,WAAa,MAAMH,EAAKI,YAChE,EAEA9R,kBAAAA,CAAoBkK,GAClB,IAAKA,EAAK,MAAO,GAGjB,MAAM6H,EAAU7H,EAAI7D,MAAM,MAAM,GAChC,IAAK0L,EAAS,OAAO7H,EACrB,MAAM8H,EAAoBD,EAAQE,QAAQ,KAC1C,OAA2B,IAAvBD,EACK,iCAAiCD,EAAQrI,UAAU,EAAGsI,KAExD,iCAAiCD,GAC1C,EACAxR,WAAAA,CAAakI,GACXtF,KAAKP,YAAa,EAClBO,KAAKN,WAAa4F,EAAMlL,KAAK2U,SAAS,SAAWzJ,EAAM0J,QAAU1J,EAAM2J,QAAQ,GAAGD,OACpF,EACAvR,UAAAA,CAAY6H,GACLtF,KAAKP,aACVO,KAAKL,SAAW2F,EAAMlL,KAAK2U,SAAS,SAAWzJ,EAAM0J,QAAU1J,EAAM2J,QAAQ,GAAGD,QAClF,EACA1R,SAAAA,GACE,IAAK0C,KAAKP,WAAY,OACtB,MAAMyP,EAAelP,KAAKL,SAAWK,KAAKN,WACpCyP,EAAY,GACdD,EAAeC,EACjBnP,KAAKhC,YACIkR,GAAgBC,GACzBnP,KAAK/B,YAEP+B,KAAKP,YAAa,EAClBO,KAAKN,WAAa,EAClBM,KAAKL,SAAW,CAClB,GAEFyP,SAAU,CACRzT,gBAAAA,GACE,OAAOqE,KAAKpF,iBAAmBoF,KAAKpF,gBAAgB+S,YAChD3N,KAAKpF,gBAAgB+S,YAAYzK,MAAM,KACvC,EACN,EACArF,oBAAAA,GACE,OAAOmC,KAAKjC,eAAeiC,KAAK5B,oBAAsB,EACxD,I,UC79BJ,MAAMiR,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QFqEA,GACExQ,KAAM,MACNyQ,WAAY,CACVC,SAAQA,GAEVzQ,IAAAA,GACE,MAAO,CACLnF,WAAW,EAEf,EACA8G,QAAS,CACPhH,SAAAA,GACEuG,KAAKrG,WAAY,CACnB,EACAI,UAAAA,GACEiG,KAAKrG,WAAY,CACnB,GAGFkG,OAAAA,GACE4D,WAAW,KACTzD,KAAKrG,WAAY,GAChB,IACL,GAGFmG,OAAO0P,iBAAiB,SAAU,WAChC,MAAMC,EAAiB3P,OAAO4P,QACxBC,EAAiBxP,SAASoD,cAAc,oBACxCqM,EAAYzP,SAASoD,cAAc,uBACnCsM,EAAc1P,SAASoD,cAAc,kCAGrCuM,EAAY,IACZC,EAAY,GACZC,EAAc,IACdC,EAAc,IAGdC,EAAchO,KAAKiO,IAAI,EAAGjO,KAAKkO,IAAI,EAAGX,EAAiB,MAGvDY,EAAYP,EAAYI,GAAeJ,EAAYC,GACnDO,EAAcN,EAAcE,GAAeF,EAAcC,GAG/DN,EAAevW,MAAMmX,OAASF,EAAY,KAC1CT,EAAUxW,MAAMoX,SAAWF,EAAc,MAGzCT,EAAYzW,MAAMoX,SAAY,IAAoB,GAAdN,EAAqB,MAGzDP,EAAevW,MAAMqX,cAAiB,GAAmB,GAAdP,EAAoB,IACjE,GG7HA,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASQ,KAEpE,QCLA5Q,OAAOlB,MAAQkB,OAAOlB,OAAS,CAAC,GAEhC+R,EAAAA,EAAAA,IAAUC,GAAKC,MAAM,O,GCLjBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBQ,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfT,EAAoBU,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS7E,EAAI,EAAGA,EAAIsE,EAASvU,OAAQiQ,IAAK,CACrCyE,EAAWH,EAAStE,GAAG,GACvB0E,EAAKJ,EAAStE,GAAG,GACjB2E,EAAWL,EAAStE,GAAG,GAE3B,IAJA,IAGI8E,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS1U,OAAQgV,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaK,OAAOC,KAAKpB,EAAoBU,GAAGW,MAAM,SAAStW,GAAO,OAAOiV,EAAoBU,EAAE3V,GAAK6V,EAASM,GAAK,GAChKN,EAASU,OAAOJ,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbR,EAASa,OAAOnF,IAAK,GACrB,IAAIoF,EAAIV,SACEV,IAANoB,IAAiBZ,EAASY,EAC/B,CACD,CACA,OAAOZ,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAI3E,EAAIsE,EAASvU,OAAQiQ,EAAI,GAAKsE,EAAStE,EAAI,GAAG,GAAK2E,EAAU3E,IAAKsE,EAAStE,GAAKsE,EAAStE,EAAI,GACrGsE,EAAStE,GAAK,CAACyE,EAAUC,EAAIC,EAwB/B,C,eC5BAd,EAAoBwB,EAAI,SAASnB,GAChC,IAAIoB,EAASpB,GAAUA,EAAOqB,WAC7B,WAAa,OAAOrB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoB2B,EAAEF,EAAQ,CAAEvE,EAAGuE,IAC5BA,CACR,C,eCNAzB,EAAoB2B,EAAI,SAASvB,EAASwB,GACzC,IAAI,IAAI7W,KAAO6W,EACX5B,EAAoB6B,EAAED,EAAY7W,KAASiV,EAAoB6B,EAAEzB,EAASrV,IAC5EoW,OAAOW,eAAe1B,EAASrV,EAAK,CAAEgX,YAAY,EAAMtR,IAAKmR,EAAW7W,IAG3E,C,eCPAiV,EAAoBgC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOhT,MAAQ,IAAIiT,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXpT,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBiR,EAAoB6B,EAAI,SAASO,EAAKC,GAAQ,OAAOlB,OAAOmB,UAAUC,eAAehC,KAAK6B,EAAKC,EAAO,C,eCCtGrC,EAAoBuB,EAAI,SAASnB,GACX,qBAAXoC,QAA0BA,OAAOC,aAC1CtB,OAAOW,eAAe1B,EAASoC,OAAOC,YAAa,CAAEnZ,MAAO,WAE7D6X,OAAOW,eAAe1B,EAAS,aAAc,CAAE9W,OAAO,GACvD,C,eCDA,IAAIoZ,EAAkB,CACrB,IAAK,GAaN1C,EAAoBU,EAAEQ,EAAI,SAASyB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B9U,GAC/D,IAKIkS,EAAU0C,EALV/B,EAAW7S,EAAK,GAChB+U,EAAc/U,EAAK,GACnBgV,EAAUhV,EAAK,GAGIoO,EAAI,EAC3B,GAAGyE,EAASoC,KAAK,SAAS/Z,GAAM,OAA+B,IAAxByZ,EAAgBzZ,EAAW,GAAI,CACrE,IAAIgX,KAAY6C,EACZ9C,EAAoB6B,EAAEiB,EAAa7C,KACrCD,EAAoBQ,EAAEP,GAAY6C,EAAY7C,IAGhD,GAAG8C,EAAS,IAAIpC,EAASoC,EAAQ/C,EAClC,CAEA,IADG6C,GAA4BA,EAA2B9U,GACrDoO,EAAIyE,EAAS1U,OAAQiQ,IACzBwG,EAAU/B,EAASzE,GAChB6D,EAAoB6B,EAAEa,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO3C,EAAoBU,EAAEC,EAC9B,EAEIsC,EAAqBC,KAAK,mBAAqBA,KAAK,oBAAsB,GAC9ED,EAAmBhQ,QAAQ2P,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBvO,KAAOkO,EAAqBO,KAAK,KAAMF,EAAmBvO,KAAKyO,KAAKF,G,IC/CvF,IAAIG,EAAsBpD,EAAoBU,OAAEP,EAAW,CAAC,KAAM,WAAa,OAAOH,EAAoB,KAAO,GACjHoD,EAAsBpD,EAAoBU,EAAE0C,E","sources":["webpack://vue/./src/App.vue","webpack://vue/./src/components/KakaoMap.vue","webpack://vue/./src/components/KakaoMap.vue?05cf","webpack://vue/./src/App.vue?7ccd","webpack://vue/./src/main.js","webpack://vue/webpack/bootstrap","webpack://vue/webpack/runtime/chunk loaded","webpack://vue/webpack/runtime/compat get default export","webpack://vue/webpack/runtime/define property getters","webpack://vue/webpack/runtime/global","webpack://vue/webpack/runtime/hasOwnProperty shorthand","webpack://vue/webpack/runtime/make namespace object","webpack://vue/webpack/runtime/jsonp chunk loading","webpack://vue/webpack/startup"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 고정할 타이틀 부분 -->\r\n    <div class=\"fixed-title\">\r\n      <div class=\"title-container\">\r\n        <h1>Road Emotion Archive</h1>\r\n        <span class=\"account-name\">@uido_motdaero</span>\r\n      </div>\r\n      <!-- 필요한 다른 요소들 (서브타이틀, 메뉴 등) -->\r\n    </div>\r\n    <main>\r\n      <!-- 스크롤 되는 컨텐츠 부분 -->\r\n      <div class=\"scrollable-content\">\r\n      <KakaoMap />\r\n\r\n      <footer>\r\n      <h2 style=\"color: black;\">여정을 담다</h2>\r\n      <label class=\"emotion-label quicksand-font\">유튜브 채널 '의도된 멋대로'의 특별 기획! <br>제가 직접 달린 길 위에서 느낀 다채로운 감정들을 실시간으로 기록하고 지도 위에 시각화했습니다. 지도 속 작은 마커 하나하나가 저의 생생한 라이딩 스토리를 담고 있습니다.</label>\r\n      <br>\r\n      <h2 style=\"color: black;\">위로가 되는 길의 기록</h2>\r\n      <label class=\"emotion-label quicksand-font\">여정 속 모든 감정을, 지도를 통해 당신의 마음으로 안내합니다. </label>\r\n    </footer>\r\n      </div>\r\n      <p class=\"update-info\">\r\n        이 지도는 항상 <strong>업데이트 예정입니다</strong>. <br>\r\n        <strong>마지막 업데이트: 2025. 8. 21.</strong><br><strong>새로운 기능</strong>과 여정으로 꾸준히 채워질 예정입니다.\r\n      </p>\r\n    </main>\r\n  </div>\r\n    <div class=\"footer-credit\">\r\n  <p class=\"made-with\">\r\n    <span class=\"made-text\">crafted with</span>\r\n    <span class=\"tech-icons\">\r\n      <i class=\"fab fa-vuejs\" title=\"Vue.js\"></i>\r\n      <i class=\"fab fa-java\" title=\"Spring Boot\"></i>\r\n      <i class=\"fab fa-postgresql\" title=\"PostgreSQL DB\"></i> <!-- Oracle DB 아이콘을 PostgreSQL로 변경! -->\r\n    </span>\r\n    <span class=\"heart-text\">and <i class=\"fas fa-heart pulse\"></i></span>\r\n  </p>\r\n  <p class=\"year-text\">2025</p>\r\n\r\n   <!-- 여기가 감성 문구 들어갈 자리! -->\r\n  <p class=\"emotional-phrase\">마음이 머무는 길을 기록합니다.</p>\r\n  <!-- 또는 원하는 다른 문구로 바꾸면 돼! -->\r\n  <!-- SNS 링크는 이전과 동일하게 유지 -->\r\n  <div class=\"sns-links\">\r\n    <a href=\"https://www.youtube.com/@uido_motdaero\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"내 유튜브 채널로 이동\">\r\n      <i class=\"fab fa-youtube\"></i>\r\n    </a>\r\n    <a href=\"https://www.instagram.com/roostergm_92/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"내 인스타그램으로 이동\">\r\n      <i class=\"fab fa-instagram\"></i>\r\n    </a>\r\n    <a href=\"https://blog.naver.com/PostList.naver?blogId=modern-gentleman\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"내 네이버 블로그로 이동\">\r\n      <i class=\"fas fa-blog\"></i>\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <!-- 모달 열기 버튼 -->\r\n  <button @click=\"openModal\">공지사항 보기</button>\r\n\r\n  <!-- 모달 창 -->\r\n  <div v-if=\"showModal\" class=\"modal-overlay\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close-btn\" @click=\"closeModal\">&times;</span>\r\n      <h2>🌟 업데이트 공지</h2>\r\n      <p>구독자 감정 스팟 기능이 곧 추가될 예정이에요!</p>\r\n      <p>더 많은 여러분의 여행 감성을 공유해주세요.</p>\r\n      <button class=\"modal-btn\" @click=\"closeModal\">확인</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport KakaoMap from './components/KakaoMap.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    KakaoMap\r\n  },\r\n  data () {\r\n    return {\r\n      showModal: false\r\n    }\r\n  },\r\n  methods: {\r\n    openModal () {\r\n      this.showModal = true\r\n    },\r\n    closeModal () {\r\n      this.showModal = false\r\n    }\r\n  },\r\n  // 페이지 로드 시 자동으로 모달 표시 (원한다면)\r\n  mounted () {\r\n    setTimeout(() => {\r\n      this.showModal = true\r\n    }, 1000) // 1초 후에 모달 표시\r\n  }\r\n}\r\n\r\nwindow.addEventListener('scroll', function () {\r\n  const scrollPosition = window.scrollY\r\n  const titleContainer = document.querySelector('.title-container')\r\n  const titleText = document.querySelector('.title-container h1')\r\n  const accountName = document.querySelector('.title-container .account-name')\r\n\r\n  // 기본 크기와 최소 크기 설정\r\n  const maxHeight = 120 // 시작 높이\r\n  const minHeight = 60 // 최소 높이\r\n  const maxFontSize = 2.8 // 시작 폰트 크기 (rem)\r\n  const minFontSize = 1.8 // 최소 폰트 크기 (rem)\r\n\r\n  // 스크롤 위치에 따라 계산 (300px 스크롤하면 최소 크기에 도달)\r\n  const shrinkRatio = Math.max(0, Math.min(1, scrollPosition / 300))\r\n\r\n  // 높이와 폰트 크기 계산\r\n  const newHeight = maxHeight - shrinkRatio * (maxHeight - minHeight)\r\n  const newFontSize = maxFontSize - shrinkRatio * (maxFontSize - minFontSize)\r\n\r\n  // 스타일 적용\r\n  titleContainer.style.height = newHeight + 'px'\r\n  titleText.style.fontSize = newFontSize + 'rem'\r\n\r\n  // 계정명도 비율에 맞게 축소\r\n  accountName.style.fontSize = (1.1 - shrinkRatio * 0.3) + 'rem'\r\n\r\n  // 패딩도 조절해서 전체적인 균형 유지\r\n  titleContainer.style.paddingBottom = (35 - shrinkRatio * 15) + 'px'\r\n})\r\n</script>\r\n\r\n<style>\r\n@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500;700&family=Montserrat:wght@500;700&family=Poppins:wght@500;700&display=swap');\r\n#app {\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nheader {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* 공통 Footer 스타일 */\r\n.social-links-footer {\r\n  width: 100%;\r\n  padding: 40px 20px; /* 위아래 여백, 좌우 여백 */\r\n  background-color: #b3cde7; /* 어두운 배경색 (감성적 느낌) */\r\n  color: #ecf0f1; /* 텍스트 색상 */\r\n  text-align: center;\r\n  border-top: 1px solid rgba(184, 184, 184, 0.1); /* 상단 구분선 */\r\n  box-sizing: border-box; /* 패딩이 너비에 포함되도록 */\r\n  position: relative; /* 필요 시 하단 고정 등을 위해 */\r\n  margin-top: 60px; /* 위에 컨텐츠와 여백 주기 */\r\n}\r\n\r\n#app {\r\n  width: 100%;\r\n  padding: 40px 20px; /* 위아래 여백, 좌우 여백 */\r\n  background-color: #ffffff; /* 어두운 배경색 (감성적 느낌) */\r\n\r\n  color: #000000; /* 텍스트 색상 */\r\n  text-align: center;\r\n  border-top: 1px solid rgb(255, 255, 255); /* 상단 구분선 */\r\n  box-sizing: border-box; /* 패딩이 너비에 포함되도록 */\r\n  position: relative; /* 필요 시 하단 고정 등을 위해 */\r\n  margin-top: 60px; /* 위에 컨텐츠와 여백 주기 */\r\n}\r\n\r\n/* 푸터 텍스트 스타일 */\r\n.footer-text {\r\n  font-size: 18px;\r\n  margin-bottom: 25px;\r\n  line-height: 1.6;\r\n  color: #bdc3c7; /* 부드러운 회색 텍스트 */\r\n  /* gaegu-font는 이미 정의된 곳에서 불러와 사용 */\r\n}\r\n\r\n/* 아이콘 컨테이너 (가운데 정렬 및 간격) */\r\n.social-icons-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 25px; /* 아이콘 사이 간격 */\r\n  align-items: center;\r\n}\r\n\r\n/* 각 소셜 아이콘 링크 스타일 */\r\n.social-icon-link {\r\n  display: inline-flex; /* flex로 정렬 */\r\n  width: 50px; /* 아이콘 크기 */\r\n  height: 50px;\r\n  justify-content: center; /* 아이콘 가운데 정렬 */\r\n  align-items: center;\r\n  border-radius: 50%; /* 원형 모양 */\r\n  background-color: rgba(255, 255, 255, 0.1); /* 투명한 배경 */\r\n  transition: all 0.3s ease-out; /* 모든 변화에 부드러운 전환 효과 */\r\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* 은은한 그림자 */\r\n}\r\n\r\n/* 아이콘 자체 (SVG) 스타일 */\r\n.social-icon {\r\n  width: 28px; /* SVG 아이콘 실제 크기 */\r\n  height: 28px;\r\n  fill: #ecf0f1; /* 아이콘 색상 (채우기) */\r\n  transition: fill 0.3s ease-out, transform 0.3s ease-out; /* 색상 및 크기 변화 부드럽게 */\r\n}\r\n\r\n/* 호버 효과 (마우스 올렸을 때) */\r\n.social-icon-link:hover {\r\n  background-color: #000000; /* 주호 메인 컬러로 배경색 변경 */\r\n  transform: translateY(-5px); /* 위로 살짝 올라가는 효과 */\r\n  box-shadow: 0 6px 12px rgba(0,0,0,0.3); /* 그림자 진해짐 */\r\n}\r\n\r\n.social-icon-link:hover .social-icon {\r\n  fill: #ffffff; /* 아이콘 색상 흰색으로 변경 */\r\n  transform: scale(1.1); /* 아이콘 자체도 살짝 커짐 */\r\n}\r\n\r\n/* 기본 라벨 스타일 */\r\n.emotion-label {\r\n  display: inline-block;\r\n  margin-bottom: 8px;\r\n  font-size: 16px;\r\n  color: #000000;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n/* 폰트 스타일 클래스들 */\r\n.quicksand-font {\r\n  font-family: 'Quicksand', sans-serif;\r\n  font-weight: 700;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.fixed-title {\r\n  position: fixed; /* 이게 핵심! 화면에 고정됨 */\r\n  text-align: center; /* 가운데 정렬 */\r\n  top: 0; /* 화면 상단에 붙임 */\r\n  left: 0; /* 화면 왼쪽에 붙임 */\r\n  width: 100%; /* 전체 너비 차지 */\r\n  background-color: #ffffff; /* 배경색 */\r\n  padding: 5px 10px; /* 여백 */\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\r\n  z-index: 1000; /* 다른 요소들보다 위에 표시 */\r\n}\r\n\r\n/* 스크롤 컨텐츠가 고정된 타이틀 아래에 표시되도록 여백 추가 */\r\n.scrollable-content {\r\n  padding-top: 70px; /* 타이틀 높이 + 여백만큼 추가 (적절히 조절) */\r\n}\r\n\r\nbody {\r\n  background: linear-gradient(135deg, #f0f4f8, #d9e2ec);\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  color: #333;\r\n  line-height: 1.6;\r\n  padding: 20px;\r\n}\r\n\r\np {\r\n  color: #4a4a4a;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.map-marker {\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n.map-marker:hover {\r\n  transform: scale(1.2);\r\n  box-shadow: 0 0 10px rgba(255, 140, 0, 0.6);\r\n}\r\n\r\n.card {\r\n  background: #ffffffdd;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n.title-container {\r\n  position: fixed; /* 고정 위치 */\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(255, 255, 255, 0.95); /* 살짝 투명한 배경 */\r\n  z-index: 100; /* 다른 요소들보다 앞에 보이게 */\r\n  transition: all 0.3s ease; /* 부드러운 애니메이션 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 120px; /* 초기 높이 */\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.05); /* 은은한 그림자 */\r\n}\r\n\r\n/* 메인 타이틀 스타일링 */\r\n.title-container h1 {\r\n  font-size: 2.8rem;\r\n  font-weight: 700;\r\n  color: #3a3a3a;\r\n  letter-spacing: 0.06em;\r\n  margin: 0;\r\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n/* 유튜브 계정명 스타일링 */\r\n.title-container .account-name {\r\n  position: absolute;\r\n  right: 5%; /* 오른쪽에서 여유 공간 */\r\n  bottom: 0;\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n  color: #777777cc;\r\n  transition: color 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n/* 호버 효과 */\r\n.title-container .account-name:hover {\r\n  color: #ff7b6a;\r\n  transform: translateX(5px);\r\n}\r\n\r\n/* 모바일 반응형 설정 */\r\n@media (max-width: 768px) {\r\n  .title-container h1 {\r\n    font-size: 2.2rem;\r\n  }\r\n\r\n  .title-container .account-name {\r\n    font-size: 0.9rem;\r\n    right: 2%;\r\n  }\r\n}\r\n\r\n.title-container span:hover {\r\n  color: #ff7b6a;\r\n  transform: translateX(5px);\r\n}\r\n.footer-credit {\r\n  text-align: center;\r\n  padding: 30px 0 15px;\r\n  margin-top: 40px;\r\n  font-family: 'Nanum Gothic', sans-serif;\r\n  color: #888;\r\n  opacity: 0.8;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.footer-credit:hover {\r\n  opacity: 1;\r\n}\r\n\r\n.made-with {\r\n  font-size: 0.85rem;\r\n  letter-spacing: 0.05em;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 6px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.made-text, .heart-text {\r\n  color: #999;\r\n  font-weight: 300;\r\n}\r\n\r\n.tech-icons {\r\n  display: inline-flex;\r\n  gap: 10px;\r\n}\r\n\r\n.tech-icons i {\r\n  font-size: 1rem;\r\n  transition: transform 0.3s ease, color 0.3s ease;\r\n}\r\n\r\n.fa-vuejs {\r\n  color: #42b883; /* Vue.js 공식 색상 */\r\n}\r\n\r\n.fa-java { /* Spring Boot는 자바 기반이라 fa-java 사용 */\r\n  color: #5382a1; /* 자바 로고 색상 */\r\n}\r\n\r\n.fa-postgresql { /* PostgreSQL 공식 색상 추가 */\r\n  color: #336791; /* PostgreSQL 로고 색상 */\r\n}\r\n\r\n.tech-icons i:hover {\r\n  transform: translateY(-3px);\r\n}\r\n\r\n.fa-heart {\r\n  color: #ff6b6b;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.pulse {\r\n  animation: pulse 1.5s infinite;\r\n}\r\n\r\n.year-text {\r\n  font-size: 0.75rem;\r\n  margin-top: 5px;\r\n  color: #aaa;\r\n}\r\n\r\n@keyframes pulse {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.15);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n\r\n/* 모바일 반응형 */\r\n@media (max-width: 768px) {\r\n  .footer-credit {\r\n    padding: 20px 0 10px;\r\n  }\r\n\r\n  .made-with {\r\n    font-size: 0.75rem;\r\n  }\r\n}\r\n\r\n/* SNS 링크 스타일은 이전과 동일하게 유지 */\r\n.sns-links {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 25px;\r\n}\r\n\r\n.sns-links a {\r\n  color: #a0a0a0;\r\n  font-size: 1.8rem;\r\n  transition: all 0.3s ease;\r\n  text-decoration: none;\r\n}\r\n\r\n.sns-links a:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.sns-links a .fa-youtube:hover {\r\n  color: #ff0000;\r\n}\r\n\r\n.sns-links a .fa-instagram:hover {\r\n  color: #E1306C;\r\n}\r\n\r\n.sns-links a .fa-blog:hover {\r\n  color: #03C75A;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .sns-links {\r\n    gap: 18px;\r\n  }\r\n  .sns-links a {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n\r\n.update-info {\r\n  font-size: 0.8rem; /* 연도보다 살짝 작게, 감성 문구와 비슷하게 */\r\n  color: #999;     /* 좀 더 밝은 회색으로 부드럽게 */\r\n  margin-top: 10px; /* 위쪽 요소와 간격 주기 */\r\n  line-height: 1.4; /* 줄 간격 */\r\n  letter-spacing: 0.02em;\r\n  font-weight: bold;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .update-info {\r\n    font-size: 0.75rem; /* 모바일에서 더 작게 */\r\n  }\r\n}\r\n\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  width: 80%;\r\n  max-width: 500px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\r\n  position: relative;\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-btn {\r\n  background: #42b983;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  margin-top: 15px;\r\n  cursor: pointer;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n</style>\r\n","<template>\r\n  <div>\r\n    <div id=\"map\" style=\"width:100%; height:500px;\">\r\n        <button v-if=\"isRegionZoomed\" @click=\"backToMainMap\" class=\"back-to-main-button\">\r\n        <span role=\"img\" aria-label=\"back\">↩️</span> 전체 지도로 돌아가기\r\n    </button>\r\n    <!-- *** 이 부분을 추가해주세요! 레이어 컨트롤   *** -->\r\n   <div class=\"layer-controls\">\r\n      <div class=\"layer-toggle\">\r\n        <input type=\"radio\" id=\"myLayerToggle\" value=\"my\" v-model=\"selectedLayer\" @change=\"loadAndDisplayLayer\">\r\n        <label for=\"myLayerToggle\">내 감정 스팟</label>\r\n      </div>\r\n      <!-- <div class=\"layer-toggle\">\r\n        <input type=\"radio\" id=\"subscriberLayerToggle\" value=\"subscriber\" v-model=\"selectedLayer\" @change=\"loadAndDisplayLayer\" v-bind=\"disabled\">\r\n        <label for=\"subscriberLayerToggle\">구독자 감정 스팟</label>\r\n      </div> -->\r\n      <!-- disabled 속성 추가 -->\r\n      <div class=\"layer-toggle disabled\">\r\n      <!-- disabled 속성 추가 -->\r\n        <input type=\"radio\" id=\"subscriberLayerToggle\" value=\"subscriber\" disabled>\r\n        <label for=\"subscriberLayerToggle\" class=\"disabled-label\">구독자 감정 스팟 (준비중)</label>\r\n      </div>\r\n      <!-- 기타 레이어나 컨트롤이 있다면 추가   -->\r\n   </div>\r\n    <!-- *** 여기까지 추가해주세요! ***  -->\r\n    </div>\r\n\r\n   <!-- 감정 상세 정보 모달 -->\r\n    <div v-if=\"selectedEmotion\" class=\"emotion-modal\">\r\n      <div class=\"emotion-modal-content\">\r\n        <span class=\"close-btn\" @click=\"closeModal\">&times;</span>\r\n        <h2>{{ selectedEmotion.title }}</h2>\r\n        <p class=\"location\"><strong>위치:</strong> {{ selectedEmotion.locationName }}</p>\r\n        <p class=\"date\"><strong>날짜:</strong> {{ formatDate(selectedEmotion.travelDate) }}</p>\r\n        <!-- 이름 정보 추가 -->\r\n        <p class=\"author\"><strong>작성자:</strong> {{ selectedEmotion.meName || '익명' }}</p>\r\n        <div class=\"emotion-tags\">\r\n          <span v-for=\"(tag, index) in emotionTagsArray\"\r\n          :key=\"index\"\r\n          class=\"tag\"\r\n          @click=\"highlightTag(index)\">{{ tag }}</span>\r\n        </div>\r\n\r\n        <!-- 모달 내 날씨 정보 표시 부분 수정 -->\r\n        <div class=\"weather-info\" v-if=\"selectedEmotion && selectedEmotion.weatherCondition\">\r\n          <div class=\"weather-icon\">\r\n            <i :class=\"getWeatherIcon(selectedEmotion.weatherCondition)\"></i>\r\n          </div>\r\n          <div class=\"weather-details\">\r\n            <p class=\"weather-condition\">{{ selectedEmotion.weatherCondition }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <p class=\"review\">{{ selectedEmotion.reviewText }}</p>\r\n        <!-- 유튜브 영상이 있는 경우에만 표시 -->\r\n        <div v-if=\"selectedEmotion.youtubeUrl\" class=\"youtube-container\">\r\n          <iframe :src=\"getYoutubeEmbedUrl(selectedEmotion.youtubeUrl)\"\r\n                  frameborder=\"0\" allowfullscreen></iframe>\r\n        </div>\r\n        <!-- 사진이 있으면 표시 -->\r\n        <div v-if=\"selectedEmotion && selectedEmotion.imageUrl && selectedEmotion.imageUrl.length > 0\" class=\"photo-slider\">\r\n          <div class=\"slider-image-wrapper\" @mousedown=\"onDragStart\"\r\n                                            @mouseup=\"onDragEnd\"\r\n                                            @mouseleave=\"onDragEnd\"\r\n                                            @mousemove=\"onDragMove\"\r\n                                            @touchstart=\"onDragStart\"\r\n                                            @touchend=\"onDragEnd\"\r\n                                            @touchmove=\"onDragMove\">\r\n            <!-- 이미지 표시 -->\r\n            <img :src=\"`/travel-emotion-map-frontend/images/${currentImageFilename}`\" alt=\"여행 사진\" class=\"slider-image\" />\r\n\r\n            <!-- 슬라이드 내비게이션 버튼 (화살표 아이콘 사용) -->\r\n            <button v-if=\"imageFilenames.length > 1\" @click=\"prevImage\" class=\"nav-btn prev\">\r\n              <i class=\"fas fa-chevron-left\"></i> <!-- 이전 화살표 아이콘 -->\r\n            </button>\r\n            <button v-if=\"imageFilenames.length > 1\" @click=\"nextImage\" class=\"nav-btn next\">\r\n              <i class=\"fas fa-chevron-right\"></i> <!-- 다음 화살표 아이콘 -->\r\n            </button>\r\n          </div>\r\n\r\n          <!-- 슬라이드 페이지네이션 점 (갯수가 1개 이상일 때만 표시) -->\r\n          <div v-if=\"imageFilenames.length > 1\" class=\"slider-dots\">\r\n            <span v-for=\"(_, index) in imageFilenames\" :key=\"index\"\r\n                  :class=\"{'active-dot': currentImageIndex === index}\"\r\n                  @click=\"setCurrentImage(index)\"></span>\r\n          </div>\r\n        </div>\r\n        <!-- 모달 하단에 공유하기 버튼 추가 -->\r\n        <div class=\"share-section\" v-if=\"selectedEmotion\">\r\n          <p class=\"share-title\">이 감정 스팟 공유하기</p>\r\n          <div class=\"share-buttons\">\r\n            <button @click=\"shareToKakao\" class=\"share-btn kakao-btn\" title=\"카카오톡 공유\">\r\n              <i class=\"fas fa-comment\"></i>\r\n            </button>\r\n            <button @click=\"shareToTwitter\" class=\"share-btn twitter-btn\" title=\"트위터 공유\">\r\n              <i class=\"fab fa-twitter\"></i>\r\n            </button>\r\n            <button @click=\"shareToFacebook\" class=\"share-btn facebook-btn\" title=\"페이스북 공유\">\r\n              <i class=\"fab fa-facebook-f\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  globals: {\r\n    kakao: 'readonly' // kakao를 전역 변수로 선언\r\n  },\r\n\r\n  name: 'KakaoMap',\r\n  data () {\r\n    return {\r\n      map: null,\r\n      provinceOverviewFeatures: null, // 전국 시도 오버뷰 GeoJSON Features\r\n      currentPolygons: [], // 현재 지도에 그려진 폴리곤들\r\n      currentLabels: [], // 현재 지도에 그려진 라벨들\r\n      districtDetailsCache: {}, // 시도별 상세 GeoJSON 데이터 캐시\r\n      isRegionZoomed: false, // 지도가 확대되었는지 여부\r\n      selectedEmotion: null, // 선택된 감정 정보\r\n      emotionMarkers: [], // 감정 마커 배열\r\n      // 25.08.19 구독자 참여를 위해 추가\r\n      myMarkers: [], // 내가 기록한 감정 마커들을 담을 배열\r\n      subscriberMarkers: [], // 구독자 감정 마커 객체들\r\n      myEmotionsData: [], // 내 감정 원본 데이터 캐시\r\n      subscriberEmotionsData: [], // 구독자 감정 원본 데이터 캐시\r\n      selectedLayer: 'my', // 현재 선택된 레이어 (초기값: 내 감정 스팟)\r\n      // 이미지슬라이드관련\r\n      currentImageIndex: 0,\r\n      imageFilenames: [],\r\n      // 기존 이미지 슬라이더 상태들..\r\n      isDragging: false,\r\n      dragStartX: 0,\r\n      dragEndX: 0,\r\n      // 기존 데이터...\r\n      linkCopied: false\r\n    }\r\n  },\r\n  mounted () {\r\n    // 지도 초기화\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap()\r\n    } else {\r\n      const script = document.createElement('script')\r\n      script.src = '//dapi.kakao.com/v2/maps/sdk.js?appkey=595fec59341e6b118c1f93b2426c80da&autoload=false'\r\n      script.onload = () => {\r\n        window.kakao.maps.load(() => {\r\n          this.initMap()\r\n        })\r\n      }\r\n      document.head.appendChild(script)\r\n    }\r\n  },\r\n  methods: {\r\n    initMap () {\r\n      const container = document.getElementById('map')\r\n      const options = {\r\n        center: new window.kakao.maps.LatLng(36.2, 127.9), // 한반도 중심\r\n        level: 13 // 한반도 전체가 보이는 레벨\r\n      }\r\n      this.map = new window.kakao.maps.Map(container, options)\r\n\r\n      // 초기 전국 시도 오버뷰 GeoJSON 로드\r\n      this.loadProvinceOverviewGeoJson()\r\n      // this.fetchEmotionData() // 이 함수가 마커를 또 생성하고 있다면 제거\r\n      // this.loadMyEmotions()   // 이 함수도 여기서 직접 호출할 필요 없어요\r\n\r\n      // 초기에는 loadAndDisplayLayer만 호출 (내 감정 스팟만 보이도록)\r\n      this.loadAndDisplayLayer()\r\n      // 초기 전국 시도 오버뷰 GeoJSON 로드\r\n      // this.loadProvinceOverviewGeoJson()\r\n      // this.fetchEmotionData()\r\n      // this.loadMyEmotions() // 기존에 내 마커 로드하는 함수\r\n      // this.loadSubscriberEmotions() // 새로 추가할 구독자 마커 로드 함수\r\n      // 초기 로드 시 'my' 레이어 데이터를 가져와서 지도에 표시\r\n      // this.loadAndDisplayLayer()\r\n    },\r\n\r\n    // 위도, 경도로 날씨 정보 가져오기\r\n    async fetchWeatherData (lat, lng) {\r\n      const API_KEY = '6b8d9db94d4b8a61b8d8a4c4e38edaa1' // API 키 발급 필요\r\n      try {\r\n        const response = await axios.get('https://api.openweathermap.org/data/2.5/weather', {\r\n          params: {\r\n            lat: lat,\r\n            lon: lng,\r\n            appid: API_KEY,\r\n            units: 'metric', // 섭씨 온도\r\n            lang: 'kr' // 한국어 결과\r\n          }\r\n        })\r\n\r\n        return {\r\n          condition: response.data.weather[0].description,\r\n          temperature: Math.round(response.data.main.temp),\r\n          humidity: response.data.main.humidity,\r\n          windSpeed: response.data.wind.speed,\r\n          icon: response.data.weather[0].icon\r\n        }\r\n      } catch (error) {\r\n        console.error('날씨 정보를 가져오는 중 오류 발생:', error)\r\n        return null\r\n      }\r\n    },\r\n\r\n    // 감정 스팟 선택 시 날씨 정보도 함께 로드\r\n    async showEmotionDetails (emotion) {\r\n      this.selectedEmotion = { // 이렇게 바꿔주는 거지!\r\n        ...emotion,\r\n        weatherCondition: emotion.weatherCondition || '정보 없음'\r\n      }\r\n\r\n      // 이미 날씨 정보가 있으면 다시 요청하지 않음\r\n      if (!this.selectedEmotion.weatherInfo && this.selectedEmotion.lat && this.selectedEmotion.lng) {\r\n        const weatherInfo = await this.fetchWeatherData(\r\n          this.selectedEmotion.lat,\r\n          this.selectedEmotion.lng\r\n        )\r\n\r\n        if (weatherInfo) {\r\n          // Vue.set을 사용하여 반응성 유지\r\n          this.$set(this.selectedEmotion, 'weatherInfo', weatherInfo)\r\n        }\r\n      }\r\n    },\r\n\r\n    // 날씨 상태에 따른 아이콘 클래스 반환\r\n    getWeatherIcon (condition) {\r\n      // condition이 없을 경우 안전하게 처리\r\n      if (!condition) return 'fas fa-cloud'\r\n      // 날씨 상태에 따라 적절한 Font Awesome 아이콘 클래스 반환\r\n      switch (condition) {\r\n        case '맑음':\r\n          return 'fas fa-sun'\r\n        case '흐림':\r\n          return 'fas fa-cloud'\r\n        case '비':\r\n          return 'fas fa-cloud-rain'\r\n        case '눈':\r\n          return 'fas fa-snowflake'\r\n        default:\r\n          return 'fas fa-cloud'\r\n      }\r\n    },\r\n\r\n    // 모달 열 때 이미지 배열 초기화\r\n    setImageFilenames () {\r\n      if (this.selectedEmotion && this.selectedEmotion.imageUrl) {\r\n        this.imageFilenames = this.selectedEmotion.imageUrl.split(',')\r\n          .map(filename => filename.trim())\r\n          .filter(filename => filename)\r\n        this.currentImageIndex = 0\r\n      }\r\n    },\r\n\r\n    // 다음 이미지로\r\n    nextImage () {\r\n      if (this.imageFilenames.length > 0) {\r\n        this.currentImageIndex = (this.currentImageIndex + 1) % this.imageFilenames.length\r\n      }\r\n      // 먼저 현재 이미지 페이드 아웃\r\n      const imageElement = document.querySelector('.slider-image')\r\n      imageElement.style.opacity = '0'\r\n\r\n      // 페이드 아웃 후 이미지 변경\r\n      setTimeout(() => {\r\n        this.currentImageIndex = (this.currentImageIndex + 1) % this.imageFilenames.length\r\n        // 새 이미지 로드 후 페이드 인\r\n        setTimeout(() => {\r\n          imageElement.style.opacity = '1'\r\n        }, 50)\r\n      }, 200)\r\n    },\r\n\r\n    // 태그 클릭 시 강조 효과\r\n    highlightTag (index) {\r\n      const tagElements = document.querySelectorAll('.tag')\r\n      tagElements[index].classList.add('tag-highlight')\r\n\r\n      setTimeout(() => {\r\n        tagElements[index].classList.remove('tag-highlight')\r\n      }, 1000)\r\n    },\r\n\r\n    // 이전 이미지로\r\n    prevImage () {\r\n      if (this.imageFilenames.length > 0) {\r\n        this.currentImageIndex = (this.currentImageIndex - 1 + this.imageFilenames.length) % this.imageFilenames.length\r\n      }\r\n    },\r\n\r\n    // 특정 이미지로 이동\r\n    setCurrentImage (index) {\r\n      this.currentImageIndex = index\r\n    },\r\n\r\n    // 모든 마커를 지도에서 숨기는 함수\r\n    hideAllMarkers () {\r\n      this.myMarkers.forEach(marker => marker.setMap(null))\r\n      this.subscriberMarkers.forEach(marker => marker.setMap(null))\r\n    },\r\n\r\n    // 선택된 레이어의 데이터를 로드하고 지도에 표시하는 핵심 함수\r\n    loadAndDisplayLayer () {\r\n      this.hideAllMarkers() // 모든 마커 먼저 숨김\r\n\r\n      if (this.selectedLayer === 'my') {\r\n        // 내 감정 데이터만 로드하고 표시\r\n        this.loadMyEmotions()\r\n      } else if (this.selectedLayer === 'subscriber') {\r\n        // 구독자 감정 데이터만 로드하고 표시\r\n        this.loadSubscriberEmotions()\r\n      }\r\n    },\r\n\r\n    // 실제 API 호출 및 마커 생성 로직 (재활용)\r\n    loadEmotions (apiUrl, type) {\r\n      axios.get(apiUrl)\r\n        .then(response => {\r\n          if (type === 'my') {\r\n            this.myEmotionsData = response.data\r\n            this.createMarkers(this.myEmotionsData, 'my')\r\n            this.myMarkers.forEach(marker => marker.setMap(this.map)) // 현재 선택된 레이어만 표시\r\n          } else if (type === 'subscriber') {\r\n            this.subscriberEmotionsData = response.data\r\n            this.createMarkers(this.subscriberEmotionsData, 'subscriber')\r\n            this.subscriberMarkers.forEach(marker => marker.setMap(this.map)) // 현재 선택된 레이어만 표시\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(`${type} 감정 데이터 로드 실패:`, error)\r\n          // 데이터 로드 실패 시에도 레이어 비활성화 또는 메시지 표시\r\n          alert(`데이터 로드에 실패했습니다. (${type})`)\r\n        })\r\n    },\r\n\r\n    // 내 감정 데이터 로드 및 마커 생성 (기존 함수를 분리/수정)\r\n    loadMyEmotions () {\r\n      // local\r\n      // axios.get('/api/travel-emotions')\r\n      // prod\r\n      axios.get('https://travel-emotion-map-backend.onrender.com/api/travel-emotions')\r\n        .then(response => {\r\n          this.createMarkers(response.data, 'my')\r\n          // 여기서 마커를 지도에 표시해줘야 해!\r\n          this.myMarkers.forEach(marker => marker.setMap(this.map))\r\n        })\r\n        .catch(error => console.error('내 감정 데이터 로드 실패:', error))\r\n    },\r\n\r\n    // 구독자 감정 데이터 로드 및 마커 생성\r\n    loadSubscriberEmotions () {\r\n      axios.get('https://travel-emotion-map-backend.onrender.com/api/subscriber-emotions')\r\n        .then(response => {\r\n          this.createMarkers(response.data, 'subscriber')\r\n          // 여기서 마커를 지도에 표시해줘야 해!\r\n          this.subscriberMarkers.forEach(marker => marker.setMap(this.map))\r\n        })\r\n        .catch(error => console.error('구독자 감정 데이터 로드 실패:', error))\r\n    },\r\n\r\n    // 마커 생성 공통 함수 (기존 마커 생성 로직을 이 함수로 옮겨서 재활용)\r\n    createMarkers (emotions, type) {\r\n      // 마커를 새로 생성하기 전에 기존 마커 배열 비우기 (선택 사항: 데이터 갱신 시 필요)\r\n      if (type === 'my') this.myMarkers = []\r\n      else if (type === 'subscriber') this.subscriberMarkers = []\r\n      emotions.forEach(emotion => {\r\n        let markerImage = null\r\n        let zIndex = 1 // zIndex로 마커 겹침 순서 조절\r\n        const markerSize = new kakao.maps.Size(32, 32)\r\n\r\n        if (type === 'my') {\r\n          // 주호의 마커 이미지 경로와 사이즈\r\n          markerImage = new kakao.maps.MarkerImage(\r\n            '/travel-emotion-map-frontend/images/my_marker.png', // 예시 경로, 실제 이미지 경로로 변경\r\n            markerSize\r\n          )\r\n          zIndex = 2 // 주호 마커를 더 위에\r\n        } else if (type === 'subscriber') {\r\n          // 구독자 마커 이미지 경로와 사이즈\r\n          markerImage = new kakao.maps.MarkerImage(\r\n            '/travel-emotion-map-frontend/images/subscriber_marker.png', // 예시 경로, 실제 이미지 경로로 변경\r\n            new kakao.maps.Size(24, 24) // 주호 마커보다 작게\r\n          )\r\n          zIndex = 1 // 구독자 마커를 아래에\r\n        }\r\n\r\n        const marker = new kakao.maps.Marker({\r\n          position: new kakao.maps.LatLng(emotion.latitude, emotion.longitude),\r\n          image: markerImage,\r\n          zIndex: zIndex,\r\n          map: null // 마커 객체는 생성하되, 처음에는 지도에 표시하지 않음 (null)\r\n        })\r\n\r\n        // 마커에 인포윈도우나 클릭 이벤트 추가 (예시)\r\n        kakao.maps.event.addListener(marker, 'click', () => {\r\n          this.showEmotionDetail(emotion)\r\n        })\r\n\r\n        if (type === 'my') {\r\n          this.myMarkers.push(marker)\r\n        } else if (type === 'subscriber') {\r\n          this.subscriberMarkers.push(marker)\r\n        }\r\n      })\r\n    },\r\n\r\n    // '내 감정 스팟' 레이어 토글 함수\r\n    toggleMyLayer () {\r\n      this.myMarkers.forEach(marker => {\r\n        marker.setMap(this.showMyLayer ? this.map : null) // showMyLayer가 true면 지도에 표시, 아니면 숨김\r\n      })\r\n    },\r\n\r\n    // '구독자 감정 스팟' 레이어 토글 함수\r\n    toggleSubscriberLayer () {\r\n      this.subscriberMarkers.forEach(marker => {\r\n        marker.setMap(this.showSubscriberLayer ? this.map : null) // showSubscriberLayer가 true면 지도에 표시, 아니면 숨김\r\n      })\r\n    },\r\n\r\n    // 카카오톡 공유\r\n    shareToKakao () {\r\n      // 카카오 SDK가 로드되었는지 확인\r\n      if (window.Kakao) {\r\n        if (!window.Kakao.isInitialized()) {\r\n          // 여기에 네 카카오 앱 키를 넣어야 해\r\n          window.Kakao.init('YOUR_KAKAO_APP_KEY')\r\n        }\r\n\r\n        window.Kakao.Link.sendDefault({\r\n          objectType: 'location',\r\n          address: this.selectedEmotion.locationName,\r\n          addressTitle: this.selectedEmotion.title,\r\n          content: {\r\n            title: this.selectedEmotion.title,\r\n            description: this.selectedEmotion.reviewText.substring(0, 80) + '...',\r\n            imageUrl: this.selectedEmotion.imageUrl ? '/images/' + this.selectedEmotion.imageUrl[0] : '',\r\n            link: {\r\n              mobileWebUrl: window.location.href,\r\n              webUrl: window.location.href\r\n            }\r\n          },\r\n          buttons: [\r\n            {\r\n              title: '감정 스팟 보기',\r\n              link: {\r\n                mobileWebUrl: window.location.href,\r\n                webUrl: window.location.href\r\n              }\r\n            }\r\n          ]\r\n        })\r\n      } else {\r\n        alert('카카오톡 공유 기능을 사용할 수 없습니다.')\r\n      }\r\n    },\r\n\r\n    // 트위터 공유\r\n    shareToTwitter () {\r\n      const text = `${this.selectedEmotion.title} - ${this.selectedEmotion.reviewText.substring(0, 50)}...`\r\n      const url = window.location.href\r\n      const shareUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`\r\n      window.open(shareUrl, '_blank')\r\n    },\r\n\r\n    // 페이스북 공유\r\n    shareToFacebook () {\r\n      const url = window.location.href\r\n      const shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`\r\n      window.open(shareUrl, '_blank')\r\n    },\r\n\r\n    // 초기 전국 시도 오버뷰 로딩 및 그리기\r\n    loadProvinceOverviewGeoJson () {\r\n      fetch('./geojson/korea-provinces-overview.geojson') // 단순화된 시도 경계 데이터\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`)\r\n          }\r\n          return response.json()\r\n        })\r\n        .then(geojsonData => {\r\n          this.provinceOverviewFeatures = geojsonData.features\r\n          this.drawProvinceOverview() // 로드 완료 후 오버뷰 그리기\r\n        })\r\n        .catch(error => {\r\n          console.error('시도 오버뷰 GeoJSON 로딩 에러:', error)\r\n          alert('초기 지도 데이터 로딩에 실패했습니다.')\r\n        })\r\n    },\r\n\r\n    drawProvinceOverview () {\r\n      this.clearMapObjects() // 이전 객체들 모두 제거\r\n\r\n      const displayedProvinceNames = new Set() // 라벨 중복 방지\r\n\r\n      this.provinceOverviewFeatures.forEach(feature => {\r\n        const sidonm = feature.properties.sidonm // 예: \"서울특별시\"\r\n        if (!sidonm) return\r\n\r\n        // 폴리곤 그리기\r\n        this.drawPolygon(feature, this.getRegionColor(sidonm), 'province')\r\n\r\n        // 라벨 추가 (한 시도당 하나의 라벨만)\r\n        if (!displayedProvinceNames.has(sidonm)) {\r\n          const center = this.getProvinceCenter(sidonm)\r\n          const labelContent = this.createLabelElement(sidonm, 'region-label')\r\n\r\n          const labelOverlay = new window.kakao.maps.CustomOverlay({\r\n            position: center,\r\n            content: labelContent,\r\n            yAnchor: 1,\r\n            map: this.map\r\n          })\r\n\r\n          // 라벨 클릭 시 해당 시도로 확대\r\n          labelContent.onclick = () => {\r\n            this.zoomToDistrictView(sidonm, center, this.getProvinceZoomLevel(sidonm))\r\n          }\r\n\r\n          this.currentLabels.push(labelOverlay)\r\n          displayedProvinceNames.add(sidonm)\r\n        }\r\n      })\r\n\r\n      this.isRegionZoomed = false // 초기 화면이므로 확대 상태 아님\r\n      this.map.setCenter(new window.kakao.maps.LatLng(36.2, 127.9))\r\n      this.map.setLevel(13)\r\n    },\r\n\r\n    // 시도 클릭 시 시군구 상세 로딩 및 그리기\r\n    zoomToDistrictView (selectedProvinceName, center, level) {\r\n      this.clearMapObjects() // 기존 객체 모두 제거\r\n\r\n      // 여기서 먼저 변수를 선언해줘야 해!\r\n      const provinceOutlineFeature = this.provinceOverviewFeatures.find(\r\n        f => f.properties.sidonm === selectedProvinceName\r\n      )\r\n      if (provinceOutlineFeature.geometry.type === 'MultiPolygon') {\r\n        // MultiPolygon인 경우 처리\r\n        provinceOutlineFeature.geometry.coordinates.forEach(polygonCoords => {\r\n          const path = polygonCoords[0].map(coord =>\r\n            new window.kakao.maps.LatLng(coord[1], coord[0])\r\n          )\r\n\r\n          const polygon = new window.kakao.maps.Polygon({\r\n            map: this.map,\r\n            path: path,\r\n            strokeWeight: 5, // 굵은 테두리\r\n            strokeColor: this.getRegionColor(selectedProvinceName),\r\n            strokeOpacity: 1,\r\n            fillOpacity: 0\r\n          })\r\n\r\n          this.currentPolygons.push(polygon)\r\n        })\r\n      } else {\r\n        // Polygon인 경우 (기존 코드)\r\n        const path = provinceOutlineFeature.geometry.coordinates[0].map(\r\n          coord => new window.kakao.maps.LatLng(coord[1], coord[0])\r\n        )\r\n\r\n        const polygon = new window.kakao.maps.Polygon({\r\n          map: this.map,\r\n          path: path,\r\n          strokeWeight: 5,\r\n          strokeColor: this.getRegionColor(selectedProvinceName),\r\n          strokeOpacity: 1,\r\n          fillOpacity: 0\r\n        })\r\n\r\n        this.currentPolygons.push(polygon)\r\n      }\r\n      this.map.setCenter(center)\r\n      this.map.setLevel(level)\r\n      this.isRegionZoomed = true\r\n    },\r\n\r\n    drawDistrictView (districtFeatures, center, level) {\r\n    // 필터링된 각 상세 GeoJSON Feature를 그리고 라벨 추가\r\n      districtFeatures.forEach(feature => {\r\n        const districtName = feature.properties.adm_nm\r\n        const polygonColor = this.getDistrictColor(districtName) // 시군구별 색상\r\n\r\n        this.drawPolygon(feature, polygonColor, 'district')\r\n\r\n        // 시군구 이름 라벨 추가\r\n        const labelCenter = this.getPolygonCenter(feature.geometry)\r\n        if (labelCenter) {\r\n          const labelContent = this.createLabelElement(feature.properties.sggnm, 'subregion-label') // 시군구 이름만 표시\r\n          const labelOverlay = new window.kakao.maps.CustomOverlay({\r\n            position: labelCenter,\r\n            content: labelContent,\r\n            map: this.map,\r\n            yAnchor: 1 // 라벨이 중심점 위로 오도록 조정\r\n          })\r\n          this.currentLabels.push(labelOverlay)\r\n        }\r\n      })\r\n\r\n      this.map.setCenter(center)\r\n      this.map.setLevel(level)\r\n      this.isRegionZoomed = true // 확대 상태\r\n    },\r\n\r\n    // 폴리곤 그리기 로직 (재활용)\r\n    drawPolygon (feature, fillColor, type = 'default') {\r\n      const paths = []\r\n\r\n      if (feature.geometry.type === 'MultiPolygon') {\r\n        feature.geometry.coordinates.forEach(polygonCoords => {\r\n          const path = polygonCoords[0].map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]))\r\n          paths.push(path)\r\n        })\r\n      } else if (feature.geometry.type === 'Polygon') {\r\n        const path = feature.geometry.coordinates[0].map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]))\r\n        paths.push(path)\r\n      } else {\r\n        console.warn('지원하지 않는 지오메트리 타입:', feature.geometry.type)\r\n        return\r\n      }\r\n\r\n      paths.forEach(path => {\r\n        const polygon = new window.kakao.maps.Polygon({\r\n          map: this.map,\r\n          path: path,\r\n          strokeWeight: (type === 'province' ? 1 : 0.5),\r\n          strokeColor: '#585858',\r\n          strokeOpacity: (type === 'province' ? 0.6 : 0.5),\r\n          fillColor: fillColor,\r\n          fillOpacity: (type === 'province' ? 0.7 : 0.8)\r\n        })\r\n\r\n        // 마우스 오버/아웃 이벤트\r\n        window.kakao.maps.event.addListener(polygon, 'mouseover', () => {\r\n          polygon.setOptions({ fillOpacity: (type === 'province' ? 0.9 : 1.0), strokeWeight: (type === 'province' ? 2 : 0.7) })\r\n        })\r\n        window.kakao.maps.event.addListener(polygon, 'mouseout', () => {\r\n          polygon.setOptions({ fillOpacity: (type === 'province' ? 0.7 : 0.8), strokeWeight: (type === 'province' ? 1 : 0.5) })\r\n        })\r\n\r\n        // 클릭 이벤트 (시도 클릭 시 확대)\r\n        if (type === 'province') {\r\n          window.kakao.maps.event.addListener(polygon, 'click', () => {\r\n            this.zoomToDistrictView(\r\n              feature.properties.sidonm,\r\n              this.getProvinceCenter(feature.properties.sidonm),\r\n              this.getProvinceZoomLevel(feature.properties.sidonm)\r\n            )\r\n          })\r\n        } else if (type === 'district') {\r\n          window.kakao.maps.event.addListener(polygon, 'click', () => {\r\n            // 여기에 해당 시군구의 감정 데이터 보여주기 등의 로직 추가\r\n          })\r\n        }\r\n\r\n        this.currentPolygons.push(polygon) // 현재 그려진 폴리곤 저장\r\n      })\r\n    },\r\n\r\n    // 유틸리티 함수들\r\n    clearMapObjects () {\r\n      this.currentPolygons.forEach(p => p.setMap(null))\r\n      this.currentPolygons = []\r\n      this.currentLabels.forEach(l => l.setMap(null))\r\n      this.currentLabels = []\r\n    },\r\n\r\n    createLabelElement (text, className) {\r\n      const element = document.createElement('div')\r\n      element.className = className\r\n      element.innerHTML = text\r\n      element.style.cssText = `\r\n        padding: 5px 10px;\r\n        background-color: rgba(255, 255, 255, 0.8);\r\n        border: 1px solid #ddd;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n        transition: all 0.2s;\r\n    `\r\n      element.onmouseover = () => { element.style.backgroundColor = 'rgba(255, 107, 107, 0.7)'; element.style.color = 'white' }\r\n      element.onmouseout = () => { element.style.backgroundColor = 'rgba(255, 255, 255, 0.8)'; element.style.color = 'black' }\r\n      return element\r\n    },\r\n\r\n    backToMainMap () {\r\n      this.clearMapObjects()\r\n      this.drawProvinceOverview() // 다시 시도 단위 오버뷰 그리기\r\n\r\n      this.map.setCenter(new window.kakao.maps.LatLng(36.2, 127.9))\r\n      this.map.setLevel(13)\r\n\r\n      this.isRegionZoomed = false\r\n    },\r\n\r\n    // 시도별 중심 좌표 및 레벨 정의\r\n    getProvinceCenter (sidonm) {\r\n      const centers = {\r\n        서울특별시: new window.kakao.maps.LatLng(37.566826, 126.9786567),\r\n        부산광역시: new window.kakao.maps.LatLng(35.1798, 129.0756),\r\n        대구광역시: new window.kakao.maps.LatLng(35.8714, 128.6014),\r\n        인천광역시: new window.kakao.maps.LatLng(37.4563, 126.7052),\r\n        광주광역시: new window.kakao.maps.LatLng(35.1595, 126.8526),\r\n        대전광역시: new window.kakao.maps.LatLng(36.3504, 127.3845),\r\n        울산광역시: new window.kakao.maps.LatLng(35.5384, 129.3114),\r\n        세종특별자치시: new window.kakao.maps.LatLng(36.4806, 127.2890),\r\n        경기도: new window.kakao.maps.LatLng(37.5307, 127.0863),\r\n        강원특별자치도: new window.kakao.maps.LatLng(37.8853, 128.0906),\r\n        충청북도: new window.kakao.maps.LatLng(36.8, 127.7),\r\n        충청남도: new window.kakao.maps.LatLng(36.6, 126.8),\r\n        전북특별자치도: new window.kakao.maps.LatLng(35.7, 127.1),\r\n        전라남도: new window.kakao.maps.LatLng(34.8, 126.9),\r\n        경상북도: new window.kakao.maps.LatLng(36.5, 128.7),\r\n        경상남도: new window.kakao.maps.LatLng(35.4, 128.1),\r\n        제주특별자치도: new window.kakao.maps.LatLng(33.3761, 126.5496)\r\n      }\r\n      return centers[sidonm] || new window.kakao.maps.LatLng(36.2, 127.9)\r\n    },\r\n\r\n    getProvinceZoomLevel (sidonm) {\r\n      const levels = {\r\n        서울특별시: 8,\r\n        부산광역시: 8,\r\n        대구광역시: 8,\r\n        인천광역시: 8,\r\n        광주광역시: 8,\r\n        대전광역시: 8,\r\n        울산광역시: 8,\r\n        세종특별자치시: 9,\r\n        경기도: 9,\r\n        강원특별자치도: 9,\r\n        충청북도: 9,\r\n        충청남도: 9,\r\n        전북특별자치도: 9,\r\n        전라남도: 9,\r\n        경상북도: 9,\r\n        경상남도: 9,\r\n        제주특별자치도: 9\r\n      }\r\n      return levels[sidonm] || 8\r\n    },\r\n\r\n    getPolygonCenter (geometry) {\r\n      let latSum = 0\r\n      let lngSum = 0\r\n      let count = 0\r\n\r\n      const processCoords = (coordsArray) => {\r\n        coordsArray.forEach(coord => {\r\n          latSum += coord[1] // 위도\r\n          lngSum += coord[0] // 경도\r\n          count++\r\n        })\r\n      }\r\n\r\n      if (geometry.type === 'MultiPolygon') {\r\n        geometry.coordinates.forEach(polygonCoords => {\r\n          processCoords(polygonCoords[0])\r\n        })\r\n      } else if (geometry.type === 'Polygon') {\r\n        processCoords(geometry.coordinates[0])\r\n      }\r\n\r\n      if (count > 0) {\r\n        return new window.kakao.maps.LatLng(latSum / count, lngSum / count)\r\n      }\r\n      return null\r\n    },\r\n\r\n    // 색상 헬퍼 함수들\r\n    getRegionColor (sidonm) {\r\n      const categoryColors = {\r\n        서울특별시: '#FF6B6B',\r\n        부산광역시: '#6a0dad',\r\n        대구광역시: '#008080',\r\n        인천광역시: '#ffa500',\r\n        광주광역시: '#00CED1',\r\n        대전광역시: '#9932CC',\r\n        울산광역시: '#f8d227',\r\n        세종특별자치시: '#20B2AA',\r\n        경기도: '#FFD700',\r\n        강원특별자치도: '#4682B4',\r\n        충청북도: '#32CD32',\r\n        충청남도: '#ff69b4',\r\n        전북특별자치도: '#00BFFF',\r\n        전라남도: '#800000',\r\n        경상북도: '#8A2BE2',\r\n        경상남도: '#DC143C',\r\n        제주특별자치도: '#008000'\r\n      }\r\n      return categoryColors[sidonm] || this.getRandomColor()\r\n    },\r\n\r\n    getDistrictColor (admNm) {\r\n      const colors = ['#f4cccc', '#fff2cc', '#d9ead3', '#cfe2f3', '#d9d2e9', '#ead1dc', '#d0e0e3', '#ffe8d6', '#c9e4de', '#ecc5c0', '#e3f3d1', '#fcf6bd', '#aed581', '#ffab91', '#4db6ac']\r\n      let hash = 0\r\n      for (let i = 0; i < admNm.length; i++) {\r\n        hash = admNm.charCodeAt(i) + ((hash << 5) - hash)\r\n      }\r\n      const index = Math.abs(hash % colors.length)\r\n      return colors[index]\r\n    },\r\n\r\n    getRandomColor () {\r\n      const letters = '0123456789ABCDEF'\r\n      let color = '#'\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)]\r\n      }\r\n      return color\r\n    },\r\n    fetchEmotionData () {\r\n      fetch('/api')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n        // 받아온 감정 데이터로 지도에 마커 표시\r\n          data.forEach(item => {\r\n            // 마커 생성 시 감정 데이터 전체를 전달\r\n            this.addEmotionMarker(\r\n              item.latitude,\r\n              item.longitude,\r\n              item.emotionTags ? item.emotionTags.split(',')[0] : '기본감정',\r\n              item // 전체 데이터 객체 전달\r\n            )\r\n          })\r\n        })\r\n        .catch(error => console.error('감정 데이터 로딩 실패:', error))\r\n    },\r\n    addEmotionMarker (lat, lng, emotion, emotionData) {\r\n      // 마커 위치 생성\r\n      const position = new window.kakao.maps.LatLng(lat, lng)\r\n\r\n      // 감정에 따른 색상 결정 (간단한 예시)\r\n      let markerColor = '#FF6B6B' // 기본 빨간색\r\n      let emotionIcon = '😊'\r\n\r\n      // 감정에 따라 다른 색상과 이모지 할당\r\n      if (emotion === '행복' || emotion === '즐거움') {\r\n        markerColor = '#FFD700'\r\n        emotionIcon = '😄'\r\n      } else if (emotion === '감동' || emotion === '벅참') {\r\n        markerColor = '#9370DB'\r\n        emotionIcon = '😢'\r\n      } else if (emotion === '힐링' || emotion === '평화') {\r\n        markerColor = '#98FB98'\r\n        emotionIcon = '😌'\r\n      } else if (emotion === '아찔함' || emotion === '스릴') {\r\n        markerColor = '#FF4500'\r\n        emotionIcon = '😱'\r\n      }\r\n\r\n      // 커스텀 오버레이 내용 (HTML)\r\n      const content = `\r\n    <div class=\"emotion-marker\" style=\"\r\n    background-color: ${markerColor};\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 50%;\r\n    box-shadow: 0 2px 6px rgba(0,0,0,0.3);\r\n    text-align: center;\r\n    font-size: 20px;\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    \">\r\n    ${emotionIcon}\r\n    </div>\r\n    `\r\n\r\n      // 커스텀 오버레이 생성\r\n      const customOverlay = new window.kakao.maps.CustomOverlay({\r\n        position: position,\r\n        content: content,\r\n        yAnchor: 1\r\n      })\r\n\r\n      // 지도에 오버레이 표시\r\n      customOverlay.setMap(this.map)\r\n\r\n      // 나중에 제거하거나 관리할 수 있도록 배열에 저장\r\n      if (!this.emotionMarkers) {\r\n        this.emotionMarkers = []\r\n      }\r\n      this.emotionMarkers.push(customOverlay)\r\n\r\n      // 클릭 이벤트 추가 (선택사항)\r\n      // 마커 클릭 시 상세 정보 표시 등의 기능 구현 가능\r\n      const markerElement = customOverlay.a\r\n      if (markerElement) {\r\n        markerElement.onclick = () => {\r\n          // 모달 표시\r\n          this.loadAndDisplayLayer()\r\n          this.showEmotionDetail(emotionData)\r\n        }\r\n      }\r\n    },\r\n    // 마커 클릭 시 감정 데이터 표시\r\n    showEmotionDetail (emotionData) {\r\n      this.selectedEmotion = emotionData\r\n\r\n      this.showEmotionDetails(emotionData)\r\n\r\n      // 이미지 URL 처리 추가\r\n      if (emotionData.imageUrl && typeof emotionData.imageUrl === 'string' && emotionData.imageUrl.length > 0) {\r\n        // 콘솔에 확인용 로그 출력\r\n\r\n        // 콤마로 구분된 이미지 URL을 배열로 변환\r\n        this.imageFilenames = emotionData.imageUrl.split(',')\r\n          .map(filename => filename.trim())\r\n          .filter(filename => filename)\r\n\r\n        this.currentImageIndex = 0\r\n      } else {\r\n        this.imageFilenames = []\r\n        this.currentImageIndex = 0\r\n      }\r\n    },\r\n    // 모달 닫기\r\n    closeModal () {\r\n      this.selectedEmotion = null\r\n      // 모달에 closing 클래스 추가\r\n      if (this.selectedEmotion) {\r\n        document.querySelector('.emotion-modal').classList.add('closing')\r\n\r\n        // 애니메이션 완료 후 모달 닫기\r\n        setTimeout(() => {\r\n          this.selectedEmotion = null\r\n          if (this.$refs.audioPlayer) {\r\n            this.$refs.audioPlayer.pause()\r\n            this.isPlaying = false\r\n          }\r\n        }, 300) // 애니메이션 시간과 동일하게\r\n      }\r\n    },\r\n    // 날짜 포맷 변환\r\n    formatDate (dateString) {\r\n      if (!dateString) return ''\r\n      const date = new Date(dateString)\r\n      return `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일`\r\n    },\r\n    // 유튜브 URL을 임베드 URL로 변환\r\n    getYoutubeEmbedUrl (url) {\r\n      if (!url) return ''\r\n      // YouTube URL 형식: https://www.youtube.com/watch?v=VIDEO_ID\r\n      // 임베드 URL 형식: https://www.youtube.com/embed/VIDEO_ID\r\n      const videoId = url.split('v=')[1]\r\n      if (!videoId) return url\r\n      const ampersandPosition = videoId.indexOf('&')\r\n      if (ampersandPosition !== -1) {\r\n        return `https://www.youtube.com/embed/${videoId.substring(0, ampersandPosition)}`\r\n      }\r\n      return `https://www.youtube.com/embed/${videoId}`\r\n    },\r\n    onDragStart (event) {\r\n      this.isDragging = true\r\n      this.dragStartX = event.type.includes('mouse') ? event.clientX : event.touches[0].clientX\r\n    },\r\n    onDragMove (event) {\r\n      if (!this.isDragging) return\r\n      this.dragEndX = event.type.includes('mouse') ? event.clientX : event.touches[0].clientX\r\n    },\r\n    onDragEnd () {\r\n      if (!this.isDragging) return\r\n      const dragDistance = this.dragEndX - this.dragStartX\r\n      const threshold = 50 // 드래그 인식 최소 거리(px)\r\n      if (dragDistance > threshold) {\r\n        this.prevImage() // 왼쪽에서 오른쪽으로 드래그 => 이전 이미지\r\n      } else if (dragDistance < -threshold) {\r\n        this.nextImage() // 오른쪽에서 왼쪽으로 드래그 => 다음 이미지\r\n      }\r\n      this.isDragging = false\r\n      this.dragStartX = 0\r\n      this.dragEndX = 0\r\n    }\r\n  },\r\n  computed: {\r\n    emotionTagsArray () {\r\n      return this.selectedEmotion && this.selectedEmotion.emotionTags\r\n        ? this.selectedEmotion.emotionTags.split(',')\r\n        : []\r\n    },\r\n    currentImageFilename () {\r\n      return this.imageFilenames[this.currentImageIndex] || ''\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.map-container {\r\n  position: relative; /* 지도 컨테이너가 layer-controls의 기준이 됨 */\r\n  width: 100%; /* 너비는 적절히 조절 */\r\n  height: 600px; /* 높이도 적절히 조절 */\r\n}\r\n\r\n#map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 모달 페이드인/아웃 애니메이션 */\r\n@keyframes modalFadeIn {\r\n  from { opacity: 0; transform: translateY(-20px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n@keyframes modalFadeOut {\r\n  from { opacity: 1; transform: translateY(0); }\r\n  to { opacity: 0; transform: translateY(-20px); }\r\n}\r\n\r\n/* *** 이 부분을 추가해주세요! 레이어 컨트롤 CSS *** */\r\n.layer-controls {\r\n  position: absolute;\r\n  bottom: 10px; /* 지도의 아래쪽에서 10px 위로 */\r\n  right: 10px;   /* 지도의 오른쪽에서 10px 왼쪽으로 */\r\n  /* 나머지 스타일 (background, padding, border-radius, box-shadow, z-index)은 그대로 유지 */\r\n  background: rgba(255, 255, 255, 0.9);\r\n  padding: 12px 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  z-index: 2;\r\n  flex-direction: column;\r\n  margin: 15px 0;\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.layer-toggle {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n}\r\n\r\n.layer-toggle input[type=\"checkbox\"] {\r\n  /* 기본 체크박스 스타일 초기화 (선택 사항) */\r\n  appearance: none; /* 브라우저 기본 스타일 제거 */\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  width: 18px;\r\n  height: 18px;\r\n  border: 2px solid #ccc; /* 테두리 */\r\n  border-radius: 4px; /* 살짝 둥글게 */\r\n  margin-right: 8px;\r\n  cursor: pointer;\r\n  outline: none; /* 클릭 시 아웃라인 제거 */\r\n  position: relative; /* 체크 마크 위치 기준 */\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.layer-toggle.disabled {\r\n  color: #999;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.layer-toggle.disabled label {\r\n  cursor: not-allowed;\r\n}\r\n\r\n.layer-toggle input[type=\"checkbox\"]:checked {\r\n  background-color: #42b883; /* 체크 시 배경색 (Vue.js 녹색 계열) */\r\n  border-color: #42b883;\r\n}\r\n\r\n.layer-toggle input[type=\"checkbox\"]:checked::before {\r\n  content: '✔'; /* 체크 마크 */\r\n  font-size: 14px;\r\n  color: white;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  line-height: 1; /* 글자 라인 높이 조절 */\r\n}\r\n\r\n.layer-toggle label {\r\n  font-size: 1rem; /* 폰트 크기 */\r\n  color: #555; /* 글자 색상 */\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n  font-weight: 400; /* 일반적인 두께 */\r\n}\r\n\r\n.layer-toggle input:checked + label {\r\n  color: #333; /* 체크 시 글자 색상 */\r\n  font-weight: 500; /* 체크 시 글자 두께 살짝 두껍게 */\r\n}\r\n/* *** 여기까지 추가해주세요! *** */\r\n\r\n.back-to-main-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 8px 15px;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  z-index: 100;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  transition: background-color 0.2s, border-color 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.back-to-main-button:hover {\r\n  background-color: #e2e6ea;\r\n  border-color: #c4c8cc;\r\n}\r\n\r\n.region-label, .subregion-label {\r\n  position: relative;\r\n  transform: translate(-50%, -50%);\r\n}\r\n.region-label {\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n}\r\n.subregion-label {\r\n  font-size: 11px;\r\n}\r\n\r\n/* 모달 스타일 */\r\n.emotion-modal {\r\n  position: fixed;\r\n  top: 0; left: 0; right:0; bottom: 0;\r\n  background: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  overflow-y: auto;\r\n  z-index: 9999;\r\n}\r\n\r\n.emotion-modal-content {\r\n  background: #fff;\r\n  border-radius: 14px;\r\n  padding: 24px 30px;\r\n  max-width: 600px;\r\n  width: 100%;\r\n  box-shadow: 0 10px 30px rgba(0,0,0,0.2);\r\n  position: relative;\r\n  animation: modalFadeIn 0.3s ease forwards;\r\n}\r\n\r\n.emotion-modal.closing .emotion-modal-content {\r\n  animation: modalFadeOut 0.3s ease forwards;\r\n}\r\n\r\n.back-to-main-button {\r\n  transition: all 0.2s ease;\r\n  transform-origin: center;\r\n}\r\n\r\n.back-to-main-button:hover {\r\n  transform: scale(1.05);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 16px;\r\n  right: 16px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.close-btn:hover {\r\n  color: #000;\r\n  transform: rotate(90deg);\r\n}\r\n\r\n.emotion-tags {\r\n  margin: 12px 0;\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.tag {\r\n  background: linear-gradient(45deg, #ff7675, #fd79a8);\r\n  padding: 6px 14px;\r\n  border-radius: 20px;\r\n  font-weight: 600;\r\n  color: white;\r\n  cursor: default;\r\n  transition: all 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n}\r\n\r\n/* 이미지 로딩 효과 */\r\n@keyframes imageFadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n\r\n.tag:hover {\r\n  transform: translateY(-3px) rotate(2deg);\r\n  box-shadow: 0 5px 15px rgba(253, 121, 168, 0.4);\r\n}\r\n\r\n.youtube-container {\r\n  position: relative;\r\n  padding-bottom: 56.25%; /* 16:9 */\r\n  height: 0;\r\n  overflow: hidden;\r\n  border-radius: 14px;\r\n  margin-top: 20px;\r\n  box-shadow: 0 8px 20px rgba(0,0,0,0.15);\r\n}\r\n\r\n.youtube-container iframe {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n}\r\n\r\n/* 기존 .photos는 이제 .photo-slider로 변경될 거예요. */\r\n.photo-slider {\r\n  margin-top: 20px;\r\n  width: 100%; /* 슬라이더 전체 너비 */\r\n  max-width: 600px; /* 슬라이더 최대 너비 (조정 가능) */\r\n  margin-left: auto; /* 가운데 정렬 */\r\n  margin-right: auto; /* 가운데 정렬 */\r\n  display: flex;\r\n  flex-direction: column; /* 세로로 정렬: 이미지 영역 위에 점 영역 */\r\n  align-items: center; /* 가운데 정렬 */\r\n}\r\n\r\n.slider-image-wrapper {\r\n  position: relative; /* 자식 요소인 버튼들의 위치 기준 */\r\n  width: 100%;\r\n  padding-top: 75%; /* 4:3 비율 유지 (너비 대비 높이 75% -> 높이 고정) */\r\n  /* 또는 height: 450px; 등으로 고정 높이를 주어도 됨 (object-fit 주의) */\r\n  overflow: hidden; /* 이미지가 이 영역을 벗어나지 않도록 */\r\n  background-color: #f0f0f0; /* 이미지가 로드되기 전 배경색 */\r\n  display: flex; /* 이미지를 중앙 정렬하기 위해 */\r\n  align-items: center; /* 이미지를 중앙 정렬하기 위해 */\r\n  justify-content: center; /* 이미지를 중앙 정렬하기 위해 */\r\n  margin-top: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 20px rgba(0,0,0,0.25);\r\n  cursor: grab;\r\n  user-select: none; /* 드래그 시 텍스트 선택되는 거 방지 */\r\n}\r\n\r\n.slider-image-wrapper:active {\r\n  cursor: grabbing;\r\n}\r\n\r\n.slider-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain; /* 이미지 비율 유지하며 컨테이너에 맞춤 (여백 생길 수 있음) */\r\n  /* object-fit: cover;  이미지 잘릴 수 있지만 컨테이너를 꽉 채움 (원하는 방식 선택) */\r\n  transition: transform 0.3s ease;\r\n  padding: 10px; /* 이미지 자체에 살짝 패딩 줘서 컨테이너 엣지랑 분리 */\r\n  display: block;\r\n  border-radius: 12px;\r\n  animation: imageFadeIn 0.5s ease;\r\n}\r\n\r\n.nav-btn {\r\n  position: absolute; /* slider-image-wrapper 내에서 절대 위치 */\r\n  top: 50%; /* 수직 중앙 */\r\n  transform: translateY(-50%); /* 정확히 중앙 정렬 */\r\n  color: white; /* 화살표 색상 */\r\n  border: none;\r\n  border-radius: 50%; /* 원형 버튼 */\r\n  width: 40px;\r\n  height: 40px;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  z-index: 10; /* 이미지 위에 오도록 */\r\n  display: flex; /* 아이콘 중앙 정렬 */\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background 0.3s ease, transform 0.3s ease;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: rgba(255, 255, 255, 0.5);\r\n}\r\n\r\n.nav-btn.prev {\r\n  left: 15px; /* 왼쪽에서 15px */\r\n}\r\n\r\n.nav-btn.next {\r\n  right: 15px; /* 오른쪽에서 15px */\r\n}\r\n\r\n.nav-btn:hover {\r\n  background: rgba(255, 255, 255, 0.85);\r\n  transform: translateY(-50%) scale(1.1); /* 호버 시 약간 커짐 */\r\n}\r\n\r\n.slider-dots {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 12px; /* 이미지 영역 아래에 배치 */\r\n  gap: 8px;\r\n}\r\n\r\n.slider-dots span {\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background: #ccc;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.slider-dots span.active-dot {\r\n  background: #fd79a8;\r\n  transform: scale(1.2);\r\n}\r\n\r\n/* 공유하기 버튼 스타일 */\r\n.share-section {\r\n  margin-top: 25px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #e5e7eb;\r\n}\r\n\r\n.share-title {\r\n  font-size: 14px;\r\n  color: #6b7280;\r\n  margin-bottom: 12px;\r\n  font-weight: 500;\r\n}\r\n\r\n.share-buttons {\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n\r\n.share-btn {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n}\r\n\r\n.share-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n}\r\n\r\n.kakao-btn {\r\n  background: #FEE500;\r\n  color: #3C1E1E;\r\n}\r\n\r\n.twitter-btn {\r\n  background: #1DA1F2;\r\n  color: white;\r\n}\r\n\r\n.facebook-btn {\r\n  background: #4267B2;\r\n  color: white;\r\n}\r\n\r\n.copy-btn {\r\n  background: white;\r\n  color: #4b5563;\r\n  position: relative;\r\n}\r\n\r\n.copy-tooltip {\r\n  position: absolute;\r\n  bottom: -30px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: rgba(0,0,0,0.7);\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  white-space: nowrap;\r\n  animation: fadeInOut 2s ease;\r\n}\r\n\r\n@keyframes fadeInOut {\r\n  0% { opacity: 0; }\r\n  20% { opacity: 1; }\r\n  80% { opacity: 1; }\r\n  100% { opacity: 0; }\r\n}\r\n\r\n/* 추가 스타일 - 태그 강조 효과 */\r\n.tag-highlight {\r\n  background: linear-gradient(45deg, #e84393, #fd79a8);\r\n  transform: scale(1.1);\r\n}\r\n\r\n/* 부드러운 스크롤 효과 */\r\nhtml {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n/* 버튼 클릭 효과 */\r\n.play-btn:active, .volume-btn:active, .share-btn:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n/* 로딩 상태를 위한 스켈레톤 효과 */\r\n@keyframes shimmer {\r\n  0% { background-position: -200% 0; }\r\n  100% { background-position: 200% 0; }\r\n}\r\n\r\n.loading-skeleton {\r\n  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\r\n  background-size: 200% 100%;\r\n  animation: shimmer 1.5s infinite;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 간소화된 날씨 스타일 */\r\n.weather-info {\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 12px 0;\r\n  padding: 10px;\r\n  background: #f5f5f5;\r\n  border-radius: 10px;\r\n}\r\n\r\n.weather-icon {\r\n  font-size: 24px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.weather-condition {\r\n  font-weight: 600;\r\n  margin: 0;\r\n}\r\n\r\n/* 날씨별 아이콘 색상 */\r\n.fa-sun { color: #ff9900; }\r\n.fa-cloud { color: #6c757d; }\r\n.fa-cloud-rain { color: #0099cc; }\r\n.fa-snowflake { color: #99ccff; }\r\n\r\n</style>\r\n","import { render } from \"./KakaoMap.vue?vue&type=template&id=dd807800&scoped=true\"\nimport script from \"./KakaoMap.vue?vue&type=script&lang=js\"\nexport * from \"./KakaoMap.vue?vue&type=script&lang=js\"\n\nimport \"./KakaoMap.vue?vue&type=style&index=0&id=dd807800&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-dd807800\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=60234e92\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=60234e92&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport App from './App.vue'\r\n\r\n// window.kakao 객체 확인\r\nwindow.kakao = window.kakao || {}\r\n\r\ncreateApp(App).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue\"] = self[\"webpackChunkvue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6289); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_KakaoMap","style","onClick","_cache","args","$options","openModal","$data","showModal","_createElementBlock","_hoisted_2","_hoisted_3","closeModal","id","isRegionZoomed","backToMainMap","role","type","value","selectedLayer","$event","onChange","loadAndDisplayLayer","for","disabled","selectedEmotion","_hoisted_4","_hoisted_5","_toDisplayString","title","_hoisted_6","locationName","_hoisted_7","formatDate","travelDate","_hoisted_8","meName","_hoisted_9","_Fragment","_renderList","emotionTagsArray","tag","index","key","highlightTag","_hoisted_10","weatherCondition","_hoisted_11","_hoisted_12","_normalizeClass","getWeatherIcon","_hoisted_13","_hoisted_14","_hoisted_15","reviewText","youtubeUrl","_hoisted_16","src","getYoutubeEmbedUrl","frameborder","allowfullscreen","imageUrl","length","_hoisted_18","onMousedown","onDragStart","onMouseup","onDragEnd","onMouseleave","onMousemove","onDragMove","onTouchstart","onTouchend","onTouchmove","currentImageFilename","alt","imageFilenames","prevImage","nextImage","_hoisted_20","_","currentImageIndex","setCurrentImage","_hoisted_22","_hoisted_23","shareToKakao","shareToTwitter","shareToFacebook","globals","kakao","name","data","map","provinceOverviewFeatures","currentPolygons","currentLabels","districtDetailsCache","emotionMarkers","myMarkers","subscriberMarkers","myEmotionsData","subscriberEmotionsData","isDragging","dragStartX","dragEndX","linkCopied","mounted","window","maps","this","initMap","script","document","createElement","onload","load","head","appendChild","methods","container","getElementById","options","center","LatLng","level","Map","loadProvinceOverviewGeoJson","fetchWeatherData","lat","lng","API_KEY","response","axios","get","params","lon","appid","units","lang","condition","weather","description","temperature","Math","round","main","temp","humidity","windSpeed","wind","speed","icon","error","console","showEmotionDetails","emotion","weatherInfo","$set","setImageFilenames","split","filename","trim","filter","imageElement","querySelector","opacity","setTimeout","tagElements","querySelectorAll","classList","add","remove","hideAllMarkers","forEach","marker","setMap","loadMyEmotions","loadSubscriberEmotions","loadEmotions","apiUrl","then","createMarkers","catch","alert","emotions","markerImage","zIndex","markerSize","Size","MarkerImage","Marker","position","latitude","longitude","image","event","addListener","showEmotionDetail","push","toggleMyLayer","showMyLayer","toggleSubscriberLayer","showSubscriberLayer","Kakao","isInitialized","init","Link","sendDefault","objectType","address","addressTitle","content","substring","link","mobileWebUrl","location","href","webUrl","buttons","text","url","shareUrl","encodeURIComponent","open","fetch","ok","Error","status","json","geojsonData","features","drawProvinceOverview","clearMapObjects","displayedProvinceNames","Set","feature","sidonm","properties","drawPolygon","getRegionColor","has","getProvinceCenter","labelContent","createLabelElement","labelOverlay","CustomOverlay","yAnchor","onclick","zoomToDistrictView","getProvinceZoomLevel","setCenter","setLevel","selectedProvinceName","provinceOutlineFeature","find","f","geometry","coordinates","polygonCoords","path","coord","polygon","Polygon","strokeWeight","strokeColor","strokeOpacity","fillOpacity","drawDistrictView","districtFeatures","districtName","adm_nm","polygonColor","getDistrictColor","labelCenter","getPolygonCenter","sggnm","fillColor","paths","warn","setOptions","p","l","className","element","innerHTML","cssText","onmouseover","backgroundColor","color","onmouseout","centers","서울특별시","부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시","세종특별자치시","경기도","강원특별자치도","충청북도","충청남도","전북특별자치도","전라남도","경상북도","경상남도","제주특별자치도","levels","latSum","lngSum","count","processCoords","coordsArray","categoryColors","getRandomColor","admNm","colors","hash","i","charCodeAt","abs","letters","floor","random","fetchEmotionData","item","addEmotionMarker","emotionTags","emotionData","markerColor","emotionIcon","customOverlay","markerElement","a","$refs","audioPlayer","pause","isPlaying","dateString","date","Date","getFullYear","getMonth","getDate","videoId","ampersandPosition","indexOf","includes","clientX","touches","dragDistance","threshold","computed","__exports__","components","KakaoMap","addEventListener","scrollPosition","scrollY","titleContainer","titleText","accountName","maxHeight","minHeight","maxFontSize","minFontSize","shrinkRatio","max","min","newHeight","newFontSize","height","fontSize","paddingBottom","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}