{"version":3,"file":"js/app.7abc3d92.js","mappings":"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","sources":["webpack://vue/./src/App.vue","webpack://vue/./src/components/KakaoMap.vue","webpack://vue/./src/components/KakaoMap.vue?05cf","webpack://vue/./src/App.vue?7ccd","webpack://vue/./src/main.js","webpack://vue/webpack/bootstrap","webpack://vue/webpack/runtime/chunk loaded","webpack://vue/webpack/runtime/define property getters","webpack://vue/webpack/runtime/global","webpack://vue/webpack/runtime/hasOwnProperty shorthand","webpack://vue/webpack/runtime/make namespace object","webpack://vue/webpack/runtime/jsonp chunk loading","webpack://vue/webpack/startup"],"sourcesContent":["<template>\n  <div>\n    <!-- 고정할 타이틀 부분 -->\n    <div class=\"fixed-title\">\n      <div class=\"title-container\">\n        <h1>Road Emotion Archive</h1>\n        <span class=\"account-name\">@uido_motdaero</span>\n      </div>\n      <!-- 필요한 다른 요소들 (서브타이틀, 메뉴 등) -->\n    </div>\n    <main>\n      <!-- 스크롤 되는 컨텐츠 부분 -->\n      <div class=\"scrollable-content\">\n      <KakaoMap />\n\n      <footer>\n      <h2 style=\"color: black;\">여정을 담다</h2>\n      <label class=\"emotion-label quicksand-font\">유튜브 채널 '의도된 멋대로'의 특별 기획! <br>제가 직접 달린 길 위에서 느낀 다채로운 감정들을 실시간으로 기록하고 지도 위에 시각화했습니다. 지도 속 작은 마커 하나하나가 저의 생생한 라이딩 스토리를 담고 있습니다.</label>\n      <br>\n      <h2 style=\"color: black;\">위로가 되는 길의 기록</h2>\n      <label class=\"emotion-label quicksand-font\">여정 속 모든 감정을, 지도를 통해 당신의 마음으로 안내합니다. </label>\n    </footer>\n      </div>\n      <p class=\"update-info\">\n        이 지도는 항상 <strong>업데이트 예정입니다</strong>. <br>\n        <strong>마지막 업데이트: 2025. 8. 21.</strong><br><strong>새로운 기능</strong>과 여정으로 꾸준히 채워질 예정입니다.\n      </p>\n    </main>\n  </div>\n    <div class=\"footer-credit\">\n  <p class=\"made-with\">\n    <span class=\"made-text\">crafted with</span>\n    <span class=\"tech-icons\">\n      <i class=\"fab fa-vuejs\" title=\"Vue.js\"></i>\n      <i class=\"fab fa-java\" title=\"Spring Boot\"></i>\n      <i class=\"fab fa-postgresql\" title=\"PostgreSQL DB\"></i> <!-- Oracle DB 아이콘을 PostgreSQL로 변경! -->\n    </span>\n    <span class=\"heart-text\">and <i class=\"fas fa-heart pulse\"></i></span>\n  </p>\n  <p class=\"year-text\">2025</p>\n\n   <!-- 여기가 감성 문구 들어갈 자리! -->\n  <p class=\"emotional-phrase\">마음이 머무는 길을 기록합니다.</p>\n  <!-- 또는 원하는 다른 문구로 바꾸면 돼! -->\n  <!-- SNS 링크는 이전과 동일하게 유지 -->\n  <div class=\"sns-links\">\n    <a href=\"https://www.youtube.com/@uido_motdaero\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"내 유튜브 채널로 이동\">\n      <i class=\"fab fa-youtube\"></i>\n    </a>\n    <a href=\"https://www.instagram.com/roostergm_92/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"내 인스타그램으로 이동\">\n      <i class=\"fab fa-instagram\"></i>\n    </a>\n    <a href=\"https://blog.naver.com/PostList.naver?blogId=modern-gentleman\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"내 네이버 블로그로 이동\">\n      <i class=\"fas fa-blog\"></i>\n    </a>\n  </div>\n</div>\n</template>\n\n<script>\nimport KakaoMap from './components/KakaoMap.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    KakaoMap\n  }\n}\n\nwindow.addEventListener('scroll', function () {\n  const scrollPosition = window.scrollY\n  const titleContainer = document.querySelector('.title-container')\n  const titleText = document.querySelector('.title-container h1')\n  const accountName = document.querySelector('.title-container .account-name')\n\n  // 기본 크기와 최소 크기 설정\n  const maxHeight = 120 // 시작 높이\n  const minHeight = 60 // 최소 높이\n  const maxFontSize = 2.8 // 시작 폰트 크기 (rem)\n  const minFontSize = 1.8 // 최소 폰트 크기 (rem)\n\n  // 스크롤 위치에 따라 계산 (300px 스크롤하면 최소 크기에 도달)\n  const shrinkRatio = Math.max(0, Math.min(1, scrollPosition / 300))\n\n  // 높이와 폰트 크기 계산\n  const newHeight = maxHeight - shrinkRatio * (maxHeight - minHeight)\n  const newFontSize = maxFontSize - shrinkRatio * (maxFontSize - minFontSize)\n\n  // 스타일 적용\n  titleContainer.style.height = newHeight + 'px'\n  titleText.style.fontSize = newFontSize + 'rem'\n\n  // 계정명도 비율에 맞게 축소\n  accountName.style.fontSize = (1.1 - shrinkRatio * 0.3) + 'rem'\n\n  // 패딩도 조절해서 전체적인 균형 유지\n  titleContainer.style.paddingBottom = (35 - shrinkRatio * 15) + 'px'\n})\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@500;700&family=Montserrat:wght@500;700&family=Poppins:wght@500;700&display=swap');\n#app {\n  font-family: 'Noto Sans KR', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nheader {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n/* 공통 Footer 스타일 */\n.social-links-footer {\n  width: 100%;\n  padding: 40px 20px; /* 위아래 여백, 좌우 여백 */\n  background-color: #b3cde7; /* 어두운 배경색 (감성적 느낌) */\n  color: #ecf0f1; /* 텍스트 색상 */\n  text-align: center;\n  border-top: 1px solid rgba(184, 184, 184, 0.1); /* 상단 구분선 */\n  box-sizing: border-box; /* 패딩이 너비에 포함되도록 */\n  position: relative; /* 필요 시 하단 고정 등을 위해 */\n  margin-top: 60px; /* 위에 컨텐츠와 여백 주기 */\n}\n\n#app {\n  width: 100%;\n  padding: 40px 20px; /* 위아래 여백, 좌우 여백 */\n  background-color: #ffffff; /* 어두운 배경색 (감성적 느낌) */\n\n  color: #000000; /* 텍스트 색상 */\n  text-align: center;\n  border-top: 1px solid rgb(255, 255, 255); /* 상단 구분선 */\n  box-sizing: border-box; /* 패딩이 너비에 포함되도록 */\n  position: relative; /* 필요 시 하단 고정 등을 위해 */\n  margin-top: 60px; /* 위에 컨텐츠와 여백 주기 */\n}\n\n/* 푸터 텍스트 스타일 */\n.footer-text {\n  font-size: 18px;\n  margin-bottom: 25px;\n  line-height: 1.6;\n  color: #bdc3c7; /* 부드러운 회색 텍스트 */\n  /* gaegu-font는 이미 정의된 곳에서 불러와 사용 */\n}\n\n/* 아이콘 컨테이너 (가운데 정렬 및 간격) */\n.social-icons-container {\n  display: flex;\n  justify-content: center;\n  gap: 25px; /* 아이콘 사이 간격 */\n  align-items: center;\n}\n\n/* 각 소셜 아이콘 링크 스타일 */\n.social-icon-link {\n  display: inline-flex; /* flex로 정렬 */\n  width: 50px; /* 아이콘 크기 */\n  height: 50px;\n  justify-content: center; /* 아이콘 가운데 정렬 */\n  align-items: center;\n  border-radius: 50%; /* 원형 모양 */\n  background-color: rgba(255, 255, 255, 0.1); /* 투명한 배경 */\n  transition: all 0.3s ease-out; /* 모든 변화에 부드러운 전환 효과 */\n  box-shadow: 0 4px 8px rgba(0,0,0,0.2); /* 은은한 그림자 */\n}\n\n/* 아이콘 자체 (SVG) 스타일 */\n.social-icon {\n  width: 28px; /* SVG 아이콘 실제 크기 */\n  height: 28px;\n  fill: #ecf0f1; /* 아이콘 색상 (채우기) */\n  transition: fill 0.3s ease-out, transform 0.3s ease-out; /* 색상 및 크기 변화 부드럽게 */\n}\n\n/* 호버 효과 (마우스 올렸을 때) */\n.social-icon-link:hover {\n  background-color: #000000; /* 주호 메인 컬러로 배경색 변경 */\n  transform: translateY(-5px); /* 위로 살짝 올라가는 효과 */\n  box-shadow: 0 6px 12px rgba(0,0,0,0.3); /* 그림자 진해짐 */\n}\n\n.social-icon-link:hover .social-icon {\n  fill: #ffffff; /* 아이콘 색상 흰색으로 변경 */\n  transform: scale(1.1); /* 아이콘 자체도 살짝 커짐 */\n}\n\n/* 기본 라벨 스타일 */\n.emotion-label {\n  display: inline-block;\n  margin-bottom: 8px;\n  font-size: 16px;\n  color: #000000;\n  transition: all 0.3s ease;\n}\n\n/* 폰트 스타일 클래스들 */\n.quicksand-font {\n  font-family: 'Quicksand', sans-serif;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n}\n\n.fixed-title {\n  position: fixed; /* 이게 핵심! 화면에 고정됨 */\n  text-align: center; /* 가운데 정렬 */\n  top: 0; /* 화면 상단에 붙임 */\n  left: 0; /* 화면 왼쪽에 붙임 */\n  width: 100%; /* 전체 너비 차지 */\n  background-color: #ffffff; /* 배경색 */\n  padding: 5px 10px; /* 여백 */\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* 그림자 효과 */\n  z-index: 1000; /* 다른 요소들보다 위에 표시 */\n}\n\n/* 스크롤 컨텐츠가 고정된 타이틀 아래에 표시되도록 여백 추가 */\n.scrollable-content {\n  padding-top: 70px; /* 타이틀 높이 + 여백만큼 추가 (적절히 조절) */\n}\n\nbody {\n  background: linear-gradient(135deg, #f0f4f8, #d9e2ec);\n  font-family: 'Noto Sans KR', sans-serif;\n  color: #333;\n  line-height: 1.6;\n  padding: 20px;\n}\n\np {\n  color: #4a4a4a;\n  margin-bottom: 15px;\n}\n\n.map-marker {\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n.map-marker:hover {\n  transform: scale(1.2);\n  box-shadow: 0 0 10px rgba(255, 140, 0, 0.6);\n}\n\n.card {\n  background: #ffffffdd;\n  border-radius: 12px;\n  padding: 20px;\n  margin-top: 20px;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n}\n.title-container {\n  position: fixed; /* 고정 위치 */\n  top: 0;\n  left: 0;\n  right: 0;\n  background: rgba(255, 255, 255, 0.95); /* 살짝 투명한 배경 */\n  z-index: 100; /* 다른 요소들보다 앞에 보이게 */\n  transition: all 0.3s ease; /* 부드러운 애니메이션 */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 120px; /* 초기 높이 */\n  box-shadow: 0 2px 10px rgba(0,0,0,0.05); /* 은은한 그림자 */\n}\n\n/* 메인 타이틀 스타일링 */\n.title-container h1 {\n  font-size: 2.8rem;\n  font-weight: 700;\n  color: #3a3a3a;\n  letter-spacing: 0.06em;\n  margin: 0;\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);\n  transition: all 0.3s ease;\n}\n\n/* 유튜브 계정명 스타일링 */\n.title-container .account-name {\n  position: absolute;\n  right: 5%; /* 오른쪽에서 여유 공간 */\n  bottom: 0;\n  font-size: 1.1rem;\n  font-weight: 500;\n  color: #777777cc;\n  transition: color 0.3s ease, transform 0.3s ease;\n}\n\n/* 호버 효과 */\n.title-container .account-name:hover {\n  color: #ff7b6a;\n  transform: translateX(5px);\n}\n\n/* 모바일 반응형 설정 */\n@media (max-width: 768px) {\n  .title-container h1 {\n    font-size: 2.2rem;\n  }\n\n  .title-container .account-name {\n    font-size: 0.9rem;\n    right: 2%;\n  }\n}\n\n.title-container span:hover {\n  color: #ff7b6a;\n  transform: translateX(5px);\n}\n.footer-credit {\n  text-align: center;\n  padding: 30px 0 15px;\n  margin-top: 40px;\n  font-family: 'Nanum Gothic', sans-serif;\n  color: #888;\n  opacity: 0.8;\n  transition: opacity 0.3s ease;\n}\n\n.footer-credit:hover {\n  opacity: 1;\n}\n\n.made-with {\n  font-size: 0.85rem;\n  letter-spacing: 0.05em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  margin-bottom: 5px;\n}\n\n.made-text, .heart-text {\n  color: #999;\n  font-weight: 300;\n}\n\n.tech-icons {\n  display: inline-flex;\n  gap: 10px;\n}\n\n.tech-icons i {\n  font-size: 1rem;\n  transition: transform 0.3s ease, color 0.3s ease;\n}\n\n.fa-vuejs {\n  color: #42b883; /* Vue.js 공식 색상 */\n}\n\n.fa-java { /* Spring Boot는 자바 기반이라 fa-java 사용 */\n  color: #5382a1; /* 자바 로고 색상 */\n}\n\n.fa-postgresql { /* PostgreSQL 공식 색상 추가 */\n  color: #336791; /* PostgreSQL 로고 색상 */\n}\n\n.tech-icons i:hover {\n  transform: translateY(-3px);\n}\n\n.fa-heart {\n  color: #ff6b6b;\n  font-size: 0.8rem;\n}\n\n.pulse {\n  animation: pulse 1.5s infinite;\n}\n\n.year-text {\n  font-size: 0.75rem;\n  margin-top: 5px;\n  color: #aaa;\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.15);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n/* 모바일 반응형 */\n@media (max-width: 768px) {\n  .footer-credit {\n    padding: 20px 0 10px;\n  }\n\n  .made-with {\n    font-size: 0.75rem;\n  }\n}\n\n/* SNS 링크 스타일은 이전과 동일하게 유지 */\n.sns-links {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 25px;\n}\n\n.sns-links a {\n  color: #a0a0a0;\n  font-size: 1.8rem;\n  transition: all 0.3s ease;\n  text-decoration: none;\n}\n\n.sns-links a:hover {\n  transform: translateY(-5px);\n}\n\n.sns-links a .fa-youtube:hover {\n  color: #ff0000;\n}\n\n.sns-links a .fa-instagram:hover {\n  color: #E1306C;\n}\n\n.sns-links a .fa-blog:hover {\n  color: #03C75A;\n}\n\n@media (max-width: 768px) {\n  .sns-links {\n    gap: 18px;\n  }\n  .sns-links a {\n    font-size: 1.5rem;\n  }\n}\n\n.update-info {\n  font-size: 0.8rem; /* 연도보다 살짝 작게, 감성 문구와 비슷하게 */\n  color: #999;     /* 좀 더 밝은 회색으로 부드럽게 */\n  margin-top: 10px; /* 위쪽 요소와 간격 주기 */\n  line-height: 1.4; /* 줄 간격 */\n  letter-spacing: 0.02em;\n  font-weight: bold;\n}\n\n@media (max-width: 768px) {\n  .update-info {\n    font-size: 0.75rem; /* 모바일에서 더 작게 */\n  }\n}\n</style>\n","<template>\r\n  <div>\r\n    <div id=\"map\" style=\"width:100%; height:500px;\">\r\n        <button v-if=\"isRegionZoomed\" @click=\"backToMainMap\" class=\"back-to-main-button\">\r\n        <span role=\"img\" aria-label=\"back\">↩️</span> 전체 지도로 돌아가기\r\n    </button>\r\n    <!-- *** 이 부분을 추가해주세요! 레이어 컨트롤 *** -->\r\n   <div class=\"layer-controls\">\r\n      <div class=\"layer-toggle\">\r\n        <input type=\"radio\" id=\"myLayerToggle\" value=\"my\" v-model=\"selectedLayer\" @change=\"loadAndDisplayLayer\">\r\n        <label for=\"myLayerToggle\">내 감정 스팟</label>\r\n      </div>\r\n      <!-- <div class=\"layer-toggle\">\r\n        <input type=\"radio\" id=\"subscriberLayerToggle\" value=\"subscriber\" v-model=\"selectedLayer\" @change=\"loadAndDisplayLayer\" v-bind=\"disabled\">\r\n        <label for=\"subscriberLayerToggle\">구독자 감정 스팟</label>\r\n      </div> -->\r\n      <!-- disabled 속성 추가 -->\r\n      <div class=\"layer-toggle disabled\">\r\n      <!-- disabled 속성 추가 -->\r\n        <input type=\"radio\" id=\"subscriberLayerToggle\" value=\"subscriber\" disabled>\r\n        <label for=\"subscriberLayerToggle\" class=\"disabled-label\">구독자 감정 스팟 (준비중)</label>\r\n      </div>\r\n      <!-- 기타 레이어나 컨트롤이 있다면 추가 -->\r\n   </div>\r\n    <!-- *** 여기까지 추가해주세요! *** -->\r\n    </div>\r\n\r\n   <!-- 감정 상세 정보 모달 -->\r\n    <div v-if=\"selectedEmotion\" class=\"emotion-modal\">\r\n      <div class=\"emotion-modal-content\">\r\n        <span class=\"close-btn\" @click=\"closeModal\">&times;</span>\r\n        <h2>{{ selectedEmotion.title }}</h2>\r\n        <p class=\"location\"><strong>위치:</strong> {{ selectedEmotion.locationName }}</p>\r\n        <p class=\"date\"><strong>날짜:</strong> {{ formatDate(selectedEmotion.travelDate) }}</p>\r\n        <!-- 이름 정보 추가 -->\r\n        <p class=\"author\"><strong>작성자:</strong> {{ selectedEmotion.meName || '익명' }}</p>\r\n        <div class=\"emotion-tags\">\r\n          <span v-for=\"(tag, index) in emotionTagsArray\" :key=\"index\" class=\"tag\">{{ tag }}</span>\r\n        </div>\r\n        <p class=\"review\">{{ selectedEmotion.reviewText }}</p>\r\n        <!-- 유튜브 영상이 있는 경우에만 표시 -->\r\n        <div v-if=\"selectedEmotion.youtubeUrl\" class=\"youtube-container\">\r\n          <iframe :src=\"getYoutubeEmbedUrl(selectedEmotion.youtubeUrl)\"\r\n                  frameborder=\"0\" allowfullscreen></iframe>\r\n        </div>\r\n        <!-- 사진이 있으면 표시 -->\r\n        <div v-if=\"selectedEmotion && selectedEmotion.imageUrl && selectedEmotion.imageUrl.length > 0\" class=\"photo-slider\">\r\n          <div class=\"slider-image-wrapper\">\r\n            <!-- 이미지 표시 -->\r\n            <img :src=\"'/images/' + currentImageFilename\" alt=\"여행 사진\" class=\"slider-image\" />\r\n\r\n            <!-- 슬라이드 내비게이션 버튼 (화살표 아이콘 사용) -->\r\n            <button v-if=\"imageFilenames.length > 1\" @click=\"prevImage\" class=\"nav-btn prev\">\r\n              <i class=\"fas fa-chevron-left\"></i> <!-- 이전 화살표 아이콘 -->\r\n            </button>\r\n            <button v-if=\"imageFilenames.length > 1\" @click=\"nextImage\" class=\"nav-btn next\">\r\n              <i class=\"fas fa-chevron-right\"></i> <!-- 다음 화살표 아이콘 -->\r\n            </button>\r\n          </div>\r\n\r\n          <!-- 슬라이드 페이지네이션 점 (갯수가 1개 이상일 때만 표시) -->\r\n          <div v-if=\"imageFilenames.length > 1\" class=\"slider-dots\">\r\n            <span v-for=\"(_, index) in imageFilenames\" :key=\"index\"\r\n                  :class=\"{'active-dot': currentImageIndex === index}\"\r\n                  @click=\"setCurrentImage(index)\"></span>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nexport default {\r\n  globals: {\r\n    kakao: 'readonly' // kakao를 전역 변수로 선언\r\n  },\r\n\r\n  name: 'KakaoMap',\r\n  data () {\r\n    return {\r\n      map: null,\r\n      provinceOverviewFeatures: null, // 전국 시도 오버뷰 GeoJSON Features\r\n      currentPolygons: [], // 현재 지도에 그려진 폴리곤들\r\n      currentLabels: [], // 현재 지도에 그려진 라벨들\r\n      districtDetailsCache: {}, // 시도별 상세 GeoJSON 데이터 캐시\r\n      isRegionZoomed: false, // 지도가 확대되었는지 여부\r\n      selectedEmotion: null, // 선택된 감정 정보\r\n      emotionMarkers: [], // 감정 마커 배열\r\n      // 25.08.19 구독자 참여를 위해 추가\r\n      myMarkers: [], // 내가 기록한 감정 마커들을 담을 배열\r\n      subscriberMarkers: [], // 구독자 감정 마커 객체들\r\n      myEmotionsData: [], // 내 감정 원본 데이터 캐시\r\n      subscriberEmotionsData: [], // 구독자 감정 원본 데이터 캐시\r\n      selectedLayer: 'my', // 현재 선택된 레이어 (초기값: 내 감정 스팟)\r\n      // 이미지슬라이드관련\r\n      currentImageIndex: 0,\r\n      imageFilenames: []\r\n    }\r\n  },\r\n  mounted () {\r\n    // 지도 초기화\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap()\r\n    } else {\r\n      const script = document.createElement('script')\r\n      script.src = '//dapi.kakao.com/v2/maps/sdk.js?appkey=595fec59341e6b118c1f93b2426c80da&autoload=false'\r\n      script.onload = () => {\r\n        window.kakao.maps.load(() => {\r\n          this.initMap()\r\n        })\r\n      }\r\n      document.head.appendChild(script)\r\n    }\r\n  },\r\n  methods: {\r\n    initMap () {\r\n      const container = document.getElementById('map')\r\n      const options = {\r\n        center: new window.kakao.maps.LatLng(36.2, 127.9), // 한반도 중심\r\n        level: 13 // 한반도 전체가 보이는 레벨\r\n      }\r\n      this.map = new window.kakao.maps.Map(container, options)\r\n\r\n      // 초기 전국 시도 오버뷰 GeoJSON 로드\r\n      this.loadProvinceOverviewGeoJson()\r\n      // this.fetchEmotionData() // 이 함수가 마커를 또 생성하고 있다면 제거\r\n      // this.loadMyEmotions()   // 이 함수도 여기서 직접 호출할 필요 없어요\r\n\r\n      // 초기에는 loadAndDisplayLayer만 호출 (내 감정 스팟만 보이도록)\r\n      this.loadAndDisplayLayer()\r\n      // 초기 전국 시도 오버뷰 GeoJSON 로드\r\n      // this.loadProvinceOverviewGeoJson()\r\n      // this.fetchEmotionData()\r\n      // this.loadMyEmotions() // 기존에 내 마커 로드하는 함수\r\n      // this.loadSubscriberEmotions() // 새로 추가할 구독자 마커 로드 함수\r\n      // 초기 로드 시 'my' 레이어 데이터를 가져와서 지도에 표시\r\n      // this.loadAndDisplayLayer()\r\n    },\r\n\r\n    // 모달 열 때 이미지 배열 초기화\r\n    setImageFilenames () {\r\n      if (this.selectedEmotion && this.selectedEmotion.imageUrl) {\r\n        this.imageFilenames = this.selectedEmotion.imageUrl.split(',')\r\n          .map(filename => filename.trim())\r\n          .filter(filename => filename)\r\n        this.currentImageIndex = 0\r\n      }\r\n    },\r\n\r\n    // 다음 이미지로\r\n    nextImage () {\r\n      if (this.imageFilenames.length > 0) {\r\n        this.currentImageIndex = (this.currentImageIndex + 1) % this.imageFilenames.length\r\n      }\r\n    },\r\n\r\n    // 이전 이미지로\r\n    prevImage () {\r\n      if (this.imageFilenames.length > 0) {\r\n        this.currentImageIndex = (this.currentImageIndex - 1 + this.imageFilenames.length) % this.imageFilenames.length\r\n      }\r\n    },\r\n\r\n    // 특정 이미지로 이동\r\n    setCurrentImage (index) {\r\n      this.currentImageIndex = index\r\n    },\r\n\r\n    // 모든 마커를 지도에서 숨기는 함수\r\n    hideAllMarkers () {\r\n      this.myMarkers.forEach(marker => marker.setMap(null))\r\n      this.subscriberMarkers.forEach(marker => marker.setMap(null))\r\n    },\r\n\r\n    // 선택된 레이어의 데이터를 로드하고 지도에 표시하는 핵심 함수\r\n    loadAndDisplayLayer () {\r\n      this.hideAllMarkers() // 모든 마커 먼저 숨김\r\n\r\n      if (this.selectedLayer === 'my') {\r\n        // 내 감정 데이터만 로드하고 표시\r\n        this.loadMyEmotions()\r\n      } else if (this.selectedLayer === 'subscriber') {\r\n        // 구독자 감정 데이터만 로드하고 표시\r\n        this.loadSubscriberEmotions()\r\n      }\r\n    },\r\n\r\n    // 실제 API 호출 및 마커 생성 로직 (재활용)\r\n    loadEmotions (apiUrl, type) {\r\n      axios.get(apiUrl)\r\n        .then(response => {\r\n          if (type === 'my') {\r\n            this.myEmotionsData = response.data\r\n            this.createMarkers(this.myEmotionsData, 'my')\r\n            console.log('marker1::', this.myMarkers)\r\n            console.log('thisMap::', this.map)\r\n            this.myMarkers.forEach(marker => marker.setMap(this.map)) // 현재 선택된 레이어만 표시\r\n          } else if (type === 'subscriber') {\r\n            this.subscriberEmotionsData = response.data\r\n            this.createMarkers(this.subscriberEmotionsData, 'subscriber')\r\n            this.subscriberMarkers.forEach(marker => marker.setMap(this.map)) // 현재 선택된 레이어만 표시\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(`${type} 감정 데이터 로드 실패:`, error)\r\n          // 데이터 로드 실패 시에도 레이어 비활성화 또는 메시지 표시\r\n          alert(`데이터 로드에 실패했습니다. (${type})`)\r\n        })\r\n    },\r\n\r\n    // 내 감정 데이터 로드 및 마커 생성 (기존 함수를 분리/수정)\r\n    loadMyEmotions () {\r\n      axios.get('/api/travel-emotions')\r\n        .then(response => {\r\n          this.createMarkers(response.data, 'my')\r\n          // 여기서 마커를 지도에 표시해줘야 해!\r\n          this.myMarkers.forEach(marker => marker.setMap(this.map))\r\n        })\r\n        .catch(error => console.error('내 감정 데이터 로드 실패:', error))\r\n    },\r\n\r\n    // 구독자 감정 데이터 로드 및 마커 생성\r\n    loadSubscriberEmotions () {\r\n      axios.get('/api/subscriber-emotions')\r\n        .then(response => {\r\n          this.createMarkers(response.data, 'subscriber')\r\n          // 여기서 마커를 지도에 표시해줘야 해!\r\n          this.subscriberMarkers.forEach(marker => marker.setMap(this.map))\r\n        })\r\n        .catch(error => console.error('구독자 감정 데이터 로드 실패:', error))\r\n    },\r\n\r\n    // 마커 생성 공통 함수 (기존 마커 생성 로직을 이 함수로 옮겨서 재활용)\r\n    createMarkers (emotions, type) {\r\n      // 마커를 새로 생성하기 전에 기존 마커 배열 비우기 (선택 사항: 데이터 갱신 시 필요)\r\n      if (type === 'my') this.myMarkers = []\r\n      else if (type === 'subscriber') this.subscriberMarkers = []\r\n      emotions.forEach(emotion => {\r\n        let markerImage = null\r\n        let zIndex = 1 // zIndex로 마커 겹침 순서 조절\r\n        const markerSize = new kakao.maps.Size(32, 32)\r\n\r\n        if (type === 'my') {\r\n          // 주호의 마커 이미지 경로와 사이즈\r\n          markerImage = new kakao.maps.MarkerImage(\r\n            '/images/my_marker.png', // 예시 경로, 실제 이미지 경로로 변경\r\n            markerSize\r\n          )\r\n          zIndex = 2 // 주호 마커를 더 위에\r\n        } else if (type === 'subscriber') {\r\n          // 구독자 마커 이미지 경로와 사이즈\r\n          markerImage = new kakao.maps.MarkerImage(\r\n            '/images/subscriber_marker.png', // 예시 경로, 실제 이미지 경로로 변경\r\n            new kakao.maps.Size(24, 24) // 주호 마커보다 작게\r\n          )\r\n          zIndex = 1 // 구독자 마커를 아래에\r\n        }\r\n\r\n        const marker = new kakao.maps.Marker({\r\n          position: new kakao.maps.LatLng(emotion.latitude, emotion.longitude),\r\n          image: markerImage,\r\n          zIndex: zIndex,\r\n          map: null // 마커 객체는 생성하되, 처음에는 지도에 표시하지 않음 (null)\r\n        })\r\n\r\n        // 마커에 인포윈도우나 클릭 이벤트 추가 (예시)\r\n        kakao.maps.event.addListener(marker, 'click', () => {\r\n          this.showEmotionDetail(emotion)\r\n        })\r\n\r\n        if (type === 'my') {\r\n          this.myMarkers.push(marker)\r\n        } else if (type === 'subscriber') {\r\n          this.subscriberMarkers.push(marker)\r\n        }\r\n      })\r\n    },\r\n\r\n    // '내 감정 스팟' 레이어 토글 함수\r\n    toggleMyLayer () {\r\n      this.myMarkers.forEach(marker => {\r\n        marker.setMap(this.showMyLayer ? this.map : null) // showMyLayer가 true면 지도에 표시, 아니면 숨김\r\n      })\r\n    },\r\n\r\n    // '구독자 감정 스팟' 레이어 토글 함수\r\n    toggleSubscriberLayer () {\r\n      this.subscriberMarkers.forEach(marker => {\r\n        marker.setMap(this.showSubscriberLayer ? this.map : null) // showSubscriberLayer가 true면 지도에 표시, 아니면 숨김\r\n      })\r\n    },\r\n\r\n    // 기존소스\r\n    // 초기 전국 시도 오버뷰 로딩 및 그리기\r\n    loadProvinceOverviewGeoJson () {\r\n      fetch('/geojson/korea-provinces-overview.geojson') // 단순화된 시도 경계 데이터\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`)\r\n          }\r\n          return response.json()\r\n        })\r\n        .then(geojsonData => {\r\n          this.provinceOverviewFeatures = geojsonData.features\r\n          console.log('시도 오버뷰 GeoJSON features 로드 완료:', this.provinceOverviewFeatures.length, '개')\r\n          this.drawProvinceOverview() // 로드 완료 후 오버뷰 그리기\r\n        })\r\n        .catch(error => {\r\n          console.error('시도 오버뷰 GeoJSON 로딩 에러:', error)\r\n          alert('초기 지도 데이터 로딩에 실패했습니다.')\r\n        })\r\n    },\r\n\r\n    drawProvinceOverview () {\r\n      this.clearMapObjects() // 이전 객체들 모두 제거\r\n\r\n      const displayedProvinceNames = new Set() // 라벨 중복 방지\r\n\r\n      this.provinceOverviewFeatures.forEach(feature => {\r\n        const sidonm = feature.properties.sidonm // 예: \"서울특별시\"\r\n        if (!sidonm) return\r\n\r\n        // 폴리곤 그리기\r\n        this.drawPolygon(feature, this.getRegionColor(sidonm), 'province')\r\n\r\n        // 라벨 추가 (한 시도당 하나의 라벨만)\r\n        if (!displayedProvinceNames.has(sidonm)) {\r\n          const center = this.getProvinceCenter(sidonm)\r\n          const labelContent = this.createLabelElement(sidonm, 'region-label')\r\n\r\n          const labelOverlay = new window.kakao.maps.CustomOverlay({\r\n            position: center,\r\n            content: labelContent,\r\n            yAnchor: 1,\r\n            map: this.map\r\n          })\r\n\r\n          // 라벨 클릭 시 해당 시도로 확대\r\n          labelContent.onclick = () => {\r\n            this.zoomToDistrictView(sidonm, center, this.getProvinceZoomLevel(sidonm))\r\n          }\r\n\r\n          this.currentLabels.push(labelOverlay)\r\n          displayedProvinceNames.add(sidonm)\r\n        }\r\n      })\r\n\r\n      this.isRegionZoomed = false // 초기 화면이므로 확대 상태 아님\r\n      this.map.setCenter(new window.kakao.maps.LatLng(36.2, 127.9))\r\n      this.map.setLevel(13)\r\n    },\r\n\r\n    // 시도 클릭 시 시군구 상세 로딩 및 그리기\r\n    zoomToDistrictView (selectedProvinceName, center, level) {\r\n      this.clearMapObjects() // 기존 객체 모두 제거\r\n\r\n      // 여기서 먼저 변수를 선언해줘야 해!\r\n      const provinceOutlineFeature = this.provinceOverviewFeatures.find(\r\n        f => f.properties.sidonm === selectedProvinceName\r\n      )\r\n      if (provinceOutlineFeature.geometry.type === 'MultiPolygon') {\r\n        // MultiPolygon인 경우 처리\r\n        provinceOutlineFeature.geometry.coordinates.forEach(polygonCoords => {\r\n          const path = polygonCoords[0].map(coord =>\r\n            new window.kakao.maps.LatLng(coord[1], coord[0])\r\n          )\r\n\r\n          const polygon = new window.kakao.maps.Polygon({\r\n            map: this.map,\r\n            path: path,\r\n            strokeWeight: 5, // 굵은 테두리\r\n            strokeColor: this.getRegionColor(selectedProvinceName),\r\n            strokeOpacity: 1,\r\n            fillOpacity: 0\r\n          })\r\n\r\n          this.currentPolygons.push(polygon)\r\n        })\r\n      } else {\r\n        // Polygon인 경우 (기존 코드)\r\n        const path = provinceOutlineFeature.geometry.coordinates[0].map(\r\n          coord => new window.kakao.maps.LatLng(coord[1], coord[0])\r\n        )\r\n\r\n        const polygon = new window.kakao.maps.Polygon({\r\n          map: this.map,\r\n          path: path,\r\n          strokeWeight: 5,\r\n          strokeColor: this.getRegionColor(selectedProvinceName),\r\n          strokeOpacity: 1,\r\n          fillOpacity: 0\r\n        })\r\n\r\n        this.currentPolygons.push(polygon)\r\n      }\r\n      this.map.setCenter(center)\r\n      this.map.setLevel(level)\r\n      this.isRegionZoomed = true\r\n    },\r\n\r\n    drawDistrictView (districtFeatures, center, level) {\r\n    // 필터링된 각 상세 GeoJSON Feature를 그리고 라벨 추가\r\n      districtFeatures.forEach(feature => {\r\n        const districtName = feature.properties.adm_nm\r\n        const polygonColor = this.getDistrictColor(districtName) // 시군구별 색상\r\n\r\n        this.drawPolygon(feature, polygonColor, 'district')\r\n\r\n        // 시군구 이름 라벨 추가\r\n        const labelCenter = this.getPolygonCenter(feature.geometry)\r\n        if (labelCenter) {\r\n          const labelContent = this.createLabelElement(feature.properties.sggnm, 'subregion-label') // 시군구 이름만 표시\r\n          const labelOverlay = new window.kakao.maps.CustomOverlay({\r\n            position: labelCenter,\r\n            content: labelContent,\r\n            map: this.map,\r\n            yAnchor: 1 // 라벨이 중심점 위로 오도록 조정\r\n          })\r\n          this.currentLabels.push(labelOverlay)\r\n        }\r\n      })\r\n\r\n      this.map.setCenter(center)\r\n      this.map.setLevel(level)\r\n      this.isRegionZoomed = true // 확대 상태\r\n    },\r\n\r\n    // 폴리곤 그리기 로직 (재활용)\r\n    drawPolygon (feature, fillColor, type = 'default') {\r\n      const paths = []\r\n\r\n      if (feature.geometry.type === 'MultiPolygon') {\r\n        feature.geometry.coordinates.forEach(polygonCoords => {\r\n          const path = polygonCoords[0].map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]))\r\n          paths.push(path)\r\n        })\r\n      } else if (feature.geometry.type === 'Polygon') {\r\n        const path = feature.geometry.coordinates[0].map(coord => new window.kakao.maps.LatLng(coord[1], coord[0]))\r\n        paths.push(path)\r\n      } else {\r\n        console.warn('지원하지 않는 지오메트리 타입:', feature.geometry.type)\r\n        return\r\n      }\r\n\r\n      paths.forEach(path => {\r\n        const polygon = new window.kakao.maps.Polygon({\r\n          map: this.map,\r\n          path: path,\r\n          strokeWeight: (type === 'province' ? 1 : 0.5),\r\n          strokeColor: '#585858',\r\n          strokeOpacity: (type === 'province' ? 0.6 : 0.5),\r\n          fillColor: fillColor,\r\n          fillOpacity: (type === 'province' ? 0.7 : 0.8)\r\n        })\r\n\r\n        // 마우스 오버/아웃 이벤트\r\n        window.kakao.maps.event.addListener(polygon, 'mouseover', () => {\r\n          polygon.setOptions({ fillOpacity: (type === 'province' ? 0.9 : 1.0), strokeWeight: (type === 'province' ? 2 : 0.7) })\r\n        })\r\n        window.kakao.maps.event.addListener(polygon, 'mouseout', () => {\r\n          polygon.setOptions({ fillOpacity: (type === 'province' ? 0.7 : 0.8), strokeWeight: (type === 'province' ? 1 : 0.5) })\r\n        })\r\n\r\n        // 클릭 이벤트 (시도 클릭 시 확대)\r\n        if (type === 'province') {\r\n          window.kakao.maps.event.addListener(polygon, 'click', () => {\r\n            this.zoomToDistrictView(\r\n              feature.properties.sidonm,\r\n              this.getProvinceCenter(feature.properties.sidonm),\r\n              this.getProvinceZoomLevel(feature.properties.sidonm)\r\n            )\r\n          })\r\n        } else if (type === 'district') {\r\n          window.kakao.maps.event.addListener(polygon, 'click', () => {\r\n            console.log('클릭한 시군구 상세:', feature.properties.adm_nm)\r\n            // 여기에 해당 시군구의 감정 데이터 보여주기 등의 로직 추가\r\n          })\r\n        }\r\n\r\n        this.currentPolygons.push(polygon) // 현재 그려진 폴리곤 저장\r\n      })\r\n    },\r\n\r\n    // 유틸리티 함수들\r\n    clearMapObjects () {\r\n      this.currentPolygons.forEach(p => p.setMap(null))\r\n      this.currentPolygons = []\r\n      this.currentLabels.forEach(l => l.setMap(null))\r\n      this.currentLabels = []\r\n    },\r\n\r\n    createLabelElement (text, className) {\r\n      const element = document.createElement('div')\r\n      element.className = className\r\n      element.innerHTML = text\r\n      element.style.cssText = `\r\n        padding: 5px 10px;\r\n        background-color: rgba(255, 255, 255, 0.8);\r\n        border: 1px solid #ddd;\r\n        border-radius: 5px;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n        white-space: nowrap;\r\n        text-align: center;\r\n        cursor: pointer;\r\n        box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n        transition: all 0.2s;\r\n    `\r\n      element.onmouseover = () => { element.style.backgroundColor = 'rgba(255, 107, 107, 0.7)'; element.style.color = 'white' }\r\n      element.onmouseout = () => { element.style.backgroundColor = 'rgba(255, 255, 255, 0.8)'; element.style.color = 'black' }\r\n      return element\r\n    },\r\n\r\n    backToMainMap () {\r\n      this.clearMapObjects()\r\n      this.drawProvinceOverview() // 다시 시도 단위 오버뷰 그리기\r\n\r\n      this.map.setCenter(new window.kakao.maps.LatLng(36.2, 127.9))\r\n      this.map.setLevel(13)\r\n\r\n      this.isRegionZoomed = false\r\n    },\r\n\r\n    // 시도별 중심 좌표 및 레벨 정의\r\n    getProvinceCenter (sidonm) {\r\n      const centers = {\r\n        서울특별시: new window.kakao.maps.LatLng(37.566826, 126.9786567),\r\n        부산광역시: new window.kakao.maps.LatLng(35.1798, 129.0756),\r\n        대구광역시: new window.kakao.maps.LatLng(35.8714, 128.6014),\r\n        인천광역시: new window.kakao.maps.LatLng(37.4563, 126.7052),\r\n        광주광역시: new window.kakao.maps.LatLng(35.1595, 126.8526),\r\n        대전광역시: new window.kakao.maps.LatLng(36.3504, 127.3845),\r\n        울산광역시: new window.kakao.maps.LatLng(35.5384, 129.3114),\r\n        세종특별자치시: new window.kakao.maps.LatLng(36.4806, 127.2890),\r\n        경기도: new window.kakao.maps.LatLng(37.5307, 127.0863),\r\n        강원특별자치도: new window.kakao.maps.LatLng(37.8853, 128.0906),\r\n        충청북도: new window.kakao.maps.LatLng(36.8, 127.7),\r\n        충청남도: new window.kakao.maps.LatLng(36.6, 126.8),\r\n        전북특별자치도: new window.kakao.maps.LatLng(35.7, 127.1),\r\n        전라남도: new window.kakao.maps.LatLng(34.8, 126.9),\r\n        경상북도: new window.kakao.maps.LatLng(36.5, 128.7),\r\n        경상남도: new window.kakao.maps.LatLng(35.4, 128.1),\r\n        제주특별자치도: new window.kakao.maps.LatLng(33.3761, 126.5496)\r\n      }\r\n      return centers[sidonm] || new window.kakao.maps.LatLng(36.2, 127.9)\r\n    },\r\n\r\n    getProvinceZoomLevel (sidonm) {\r\n      const levels = {\r\n        서울특별시: 8,\r\n        부산광역시: 8,\r\n        대구광역시: 8,\r\n        인천광역시: 8,\r\n        광주광역시: 8,\r\n        대전광역시: 8,\r\n        울산광역시: 8,\r\n        세종특별자치시: 9,\r\n        경기도: 9,\r\n        강원특별자치도: 9,\r\n        충청북도: 9,\r\n        충청남도: 9,\r\n        전북특별자치도: 9,\r\n        전라남도: 9,\r\n        경상북도: 9,\r\n        경상남도: 9,\r\n        제주특별자치도: 9\r\n      }\r\n      return levels[sidonm] || 8\r\n    },\r\n\r\n    getPolygonCenter (geometry) {\r\n      let latSum = 0\r\n      let lngSum = 0\r\n      let count = 0\r\n\r\n      const processCoords = (coordsArray) => {\r\n        coordsArray.forEach(coord => {\r\n          latSum += coord[1] // 위도\r\n          lngSum += coord[0] // 경도\r\n          count++\r\n        })\r\n      }\r\n\r\n      if (geometry.type === 'MultiPolygon') {\r\n        geometry.coordinates.forEach(polygonCoords => {\r\n          processCoords(polygonCoords[0])\r\n        })\r\n      } else if (geometry.type === 'Polygon') {\r\n        processCoords(geometry.coordinates[0])\r\n      }\r\n\r\n      if (count > 0) {\r\n        return new window.kakao.maps.LatLng(latSum / count, lngSum / count)\r\n      }\r\n      return null\r\n    },\r\n\r\n    // 색상 헬퍼 함수들\r\n    getRegionColor (sidonm) {\r\n      const categoryColors = {\r\n        서울특별시: '#FF6B6B',\r\n        부산광역시: '#6a0dad',\r\n        대구광역시: '#008080',\r\n        인천광역시: '#ffa500',\r\n        광주광역시: '#00CED1',\r\n        대전광역시: '#9932CC',\r\n        울산광역시: '#f8d227',\r\n        세종특별자치시: '#20B2AA',\r\n        경기도: '#FFD700',\r\n        강원특별자치도: '#4682B4',\r\n        충청북도: '#32CD32',\r\n        충청남도: '#ff69b4',\r\n        전북특별자치도: '#00BFFF',\r\n        전라남도: '#800000',\r\n        경상북도: '#8A2BE2',\r\n        경상남도: '#DC143C',\r\n        제주특별자치도: '#008000'\r\n      }\r\n      return categoryColors[sidonm] || this.getRandomColor()\r\n    },\r\n\r\n    getDistrictColor (admNm) {\r\n      const colors = ['#f4cccc', '#fff2cc', '#d9ead3', '#cfe2f3', '#d9d2e9', '#ead1dc', '#d0e0e3', '#ffe8d6', '#c9e4de', '#ecc5c0', '#e3f3d1', '#fcf6bd', '#aed581', '#ffab91', '#4db6ac']\r\n      let hash = 0\r\n      for (let i = 0; i < admNm.length; i++) {\r\n        hash = admNm.charCodeAt(i) + ((hash << 5) - hash)\r\n      }\r\n      const index = Math.abs(hash % colors.length)\r\n      return colors[index]\r\n    },\r\n\r\n    getRandomColor () {\r\n      const letters = '0123456789ABCDEF'\r\n      let color = '#'\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)]\r\n      }\r\n      return color\r\n    },\r\n    fetchEmotionData () {\r\n      fetch('/api')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n        // 받아온 감정 데이터로 지도에 마커 표시\r\n          console.log('data ::', data)\r\n          data.forEach(item => {\r\n            // 마커 생성 시 감정 데이터 전체를 전달\r\n            this.addEmotionMarker(\r\n              item.latitude,\r\n              item.longitude,\r\n              item.emotionTags ? item.emotionTags.split(',')[0] : '기본감정',\r\n              item // 전체 데이터 객체 전달\r\n            )\r\n          })\r\n        })\r\n        .catch(error => console.error('감정 데이터 로딩 실패:', error))\r\n    },\r\n    addEmotionMarker (lat, lng, emotion, emotionData) {\r\n      // 마커 위치 생성\r\n      const position = new window.kakao.maps.LatLng(lat, lng)\r\n\r\n      // 감정에 따른 색상 결정 (간단한 예시)\r\n      let markerColor = '#FF6B6B' // 기본 빨간색\r\n      let emotionIcon = '😊'\r\n\r\n      // 감정에 따라 다른 색상과 이모지 할당\r\n      if (emotion === '행복' || emotion === '즐거움') {\r\n        markerColor = '#FFD700'\r\n        emotionIcon = '😄'\r\n      } else if (emotion === '감동' || emotion === '벅참') {\r\n        markerColor = '#9370DB'\r\n        emotionIcon = '😢'\r\n      } else if (emotion === '힐링' || emotion === '평화') {\r\n        markerColor = '#98FB98'\r\n        emotionIcon = '😌'\r\n      } else if (emotion === '아찔함' || emotion === '스릴') {\r\n        markerColor = '#FF4500'\r\n        emotionIcon = '😱'\r\n      }\r\n\r\n      // 커스텀 오버레이 내용 (HTML)\r\n      const content = `\r\n    <div class=\"emotion-marker\" style=\"\r\n    background-color: ${markerColor};\r\n    color: white;\r\n    padding: 10px;\r\n    border-radius: 50%;\r\n    box-shadow: 0 2px 6px rgba(0,0,0,0.3);\r\n    text-align: center;\r\n    font-size: 20px;\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    \">\r\n    ${emotionIcon}\r\n    </div>\r\n    `\r\n\r\n      // 커스텀 오버레이 생성\r\n      const customOverlay = new window.kakao.maps.CustomOverlay({\r\n        position: position,\r\n        content: content,\r\n        yAnchor: 1\r\n      })\r\n\r\n      // 지도에 오버레이 표시\r\n      customOverlay.setMap(this.map)\r\n\r\n      // 나중에 제거하거나 관리할 수 있도록 배열에 저장\r\n      if (!this.emotionMarkers) {\r\n        this.emotionMarkers = []\r\n      }\r\n      this.emotionMarkers.push(customOverlay)\r\n\r\n      // 클릭 이벤트 추가 (선택사항)\r\n      // 마커 클릭 시 상세 정보 표시 등의 기능 구현 가능\r\n      const markerElement = customOverlay.a\r\n      if (markerElement) {\r\n        markerElement.onclick = () => {\r\n          console.log(`${lat}, ${lng}의 감정: ${emotionData} 마커 클릭됨!`)\r\n          // 모달 표시\r\n          this.loadAndDisplayLayer()\r\n          this.showEmotionDetail(emotionData)\r\n        }\r\n      }\r\n    },\r\n    // 마커 클릭 시 감정 데이터 표시\r\n    showEmotionDetail (emotionData) {\r\n      this.selectedEmotion = emotionData\r\n\r\n      // 이미지 URL 처리 추가\r\n      if (emotionData.imageUrl && typeof emotionData.imageUrl === 'string' && emotionData.imageUrl.length > 0) {\r\n        // 콘솔에 확인용 로그 출력\r\n\r\n        // 콤마로 구분된 이미지 URL을 배열로 변환\r\n        this.imageFilenames = emotionData.imageUrl.split(',')\r\n          .map(filename => filename.trim())\r\n          .filter(filename => filename)\r\n\r\n        this.currentImageIndex = 0\r\n      } else {\r\n        this.imageFilenames = []\r\n        this.currentImageIndex = 0\r\n      }\r\n    },\r\n    // 모달 닫기\r\n    closeModal () {\r\n      this.selectedEmotion = null\r\n    },\r\n    // 날짜 포맷 변환\r\n    formatDate (dateString) {\r\n      if (!dateString) return ''\r\n      const date = new Date(dateString)\r\n      return `${date.getFullYear()}년 ${date.getMonth() + 1}월 ${date.getDate()}일`\r\n    },\r\n    // 유튜브 URL을 임베드 URL로 변환\r\n    getYoutubeEmbedUrl (url) {\r\n      if (!url) return ''\r\n      // YouTube URL 형식: https://www.youtube.com/watch?v=VIDEO_ID\r\n      // 임베드 URL 형식: https://www.youtube.com/embed/VIDEO_ID\r\n      const videoId = url.split('v=')[1]\r\n      if (!videoId) return url\r\n      const ampersandPosition = videoId.indexOf('&')\r\n      if (ampersandPosition !== -1) {\r\n        return `https://www.youtube.com/embed/${videoId.substring(0, ampersandPosition)}`\r\n      }\r\n      return `https://www.youtube.com/embed/${videoId}`\r\n    }\r\n  },\r\n  computed: {\r\n    emotionTagsArray () {\r\n      return this.selectedEmotion && this.selectedEmotion.emotionTags\r\n        ? this.selectedEmotion.emotionTags.split(',')\r\n        : []\r\n    },\r\n    currentImageFilename () {\r\n      return this.imageFilenames[this.currentImageIndex] || ''\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.map-container {\r\n  position: relative; /* 지도 컨테이너가 layer-controls의 기준이 됨 */\r\n  width: 100%; /* 너비는 적절히 조절 */\r\n  height: 600px; /* 높이도 적절히 조절 */\r\n}\r\n\r\n#map {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* *** 이 부분을 추가해주세요! 레이어 컨트롤 CSS *** */\r\n.layer-controls {\r\n  position: absolute;\r\n  bottom: 10px; /* 지도의 아래쪽에서 10px 위로 */\r\n  right: 10px;   /* 지도의 오른쪽에서 10px 왼쪽으로 */\r\n  /* 나머지 스타일 (background, padding, border-radius, box-shadow, z-index)은 그대로 유지 */\r\n  background: rgba(255, 255, 255, 0.9);\r\n  padding: 12px 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  z-index: 2;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.layer-toggle {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.layer-toggle input[type=\"checkbox\"] {\r\n  /* 기본 체크박스 스타일 초기화 (선택 사항) */\r\n  appearance: none; /* 브라우저 기본 스타일 제거 */\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  width: 18px;\r\n  height: 18px;\r\n  border: 2px solid #ccc; /* 테두리 */\r\n  border-radius: 4px; /* 살짝 둥글게 */\r\n  margin-right: 8px;\r\n  cursor: pointer;\r\n  outline: none; /* 클릭 시 아웃라인 제거 */\r\n  position: relative; /* 체크 마크 위치 기준 */\r\n  transition: all 0.2s ease-in-out;\r\n}\r\n\r\n.layer-toggle input[type=\"checkbox\"]:checked {\r\n  background-color: #42b883; /* 체크 시 배경색 (Vue.js 녹색 계열) */\r\n  border-color: #42b883;\r\n}\r\n\r\n.layer-toggle input[type=\"checkbox\"]:checked::before {\r\n  content: '✔'; /* 체크 마크 */\r\n  font-size: 14px;\r\n  color: white;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  line-height: 1; /* 글자 라인 높이 조절 */\r\n}\r\n\r\n.layer-toggle label {\r\n  font-size: 1rem; /* 폰트 크기 */\r\n  color: #555; /* 글자 색상 */\r\n  cursor: pointer;\r\n  transition: color 0.3s ease;\r\n  font-weight: 400; /* 일반적인 두께 */\r\n}\r\n\r\n.layer-toggle input:checked + label {\r\n  color: #333; /* 체크 시 글자 색상 */\r\n  font-weight: 500; /* 체크 시 글자 두께 살짝 두껍게 */\r\n}\r\n/* *** 여기까지 추가해주세요! *** */\r\n\r\n.back-to-main-button {\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 10px;\r\n  padding: 8px 15px;\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  z-index: 100;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  transition: background-color 0.2s, border-color 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.back-to-main-button:hover {\r\n  background-color: #e2e6ea;\r\n  border-color: #c4c8cc;\r\n}\r\n\r\n.region-label, .subregion-label {\r\n  position: relative;\r\n  transform: translate(-50%, -50%);\r\n}\r\n.region-label {\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n}\r\n.subregion-label {\r\n  font-size: 11px;\r\n}\r\n\r\n/* 모달 스타일 */\r\n.emotion-modal {\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.emotion-modal-content {\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  max-width: 600px;\r\n  width: 90%;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n  position: relative;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 15px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.emotion-tags {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  margin: 15px 0;\r\n}\r\n\r\n.tag {\r\n  background-color: #FF6B6B;\r\n  color: rgb(255, 0, 0);\r\n  padding: 5px 10px;\r\n  border-radius: 20px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n}\r\n\r\n.youtube-container {\r\n  position: relative;\r\n  padding-bottom: 56.25%; /* 16:9 비율 */\r\n  height: 0;\r\n  overflow: hidden;\r\n  margin: 20px 0;\r\n}\r\n\r\n.youtube-container iframe {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* 기존 .photos는 이제 .photo-slider로 변경될 거예요. */\r\n.photo-slider {\r\n  margin-top: 20px;\r\n  width: 100%; /* 슬라이더 전체 너비 */\r\n  max-width: 600px; /* 슬라이더 최대 너비 (조정 가능) */\r\n  margin-left: auto; /* 가운데 정렬 */\r\n  margin-right: auto; /* 가운데 정렬 */\r\n  display: flex;\r\n  flex-direction: column; /* 세로로 정렬: 이미지 영역 위에 점 영역 */\r\n  align-items: center; /* 가운데 정렬 */\r\n}\r\n\r\n.slider-image-wrapper {\r\n  position: relative; /* 자식 요소인 버튼들의 위치 기준 */\r\n  width: 100%;\r\n  padding-top: 75%; /* 4:3 비율 유지 (너비 대비 높이 75% -> 높이 고정) */\r\n  /* 또는 height: 450px; 등으로 고정 높이를 주어도 됨 (object-fit 주의) */\r\n  overflow: hidden; /* 이미지가 이 영역을 벗어나지 않도록 */\r\n  border-radius: 10px; /* 모서리 둥글게 */\r\n  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.15); /* 그림자 */\r\n  background-color: #f0f0f0; /* 이미지가 로드되기 전 배경색 */\r\n  display: flex; /* 이미지를 중앙 정렬하기 위해 */\r\n  align-items: center; /* 이미지를 중앙 정렬하기 위해 */\r\n  justify-content: center; /* 이미지를 중앙 정렬하기 위해 */\r\n}\r\n\r\n.slider-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: contain; /* 이미지 비율 유지하며 컨테이너에 맞춤 (여백 생길 수 있음) */\r\n  /* object-fit: cover;  이미지 잘릴 수 있지만 컨테이너를 꽉 채움 (원하는 방식 선택) */\r\n  transition: transform 0.3s ease;\r\n  padding: 10px; /* 이미지 자체에 살짝 패딩 줘서 컨테이너 엣지랑 분리 */\r\n}\r\n\r\n.nav-btn {\r\n  position: absolute; /* slider-image-wrapper 내에서 절대 위치 */\r\n  top: 50%; /* 수직 중앙 */\r\n  transform: translateY(-50%); /* 정확히 중앙 정렬 */\r\n  background: rgba(0, 0, 0, 0.5); /* 어두운 반투명 배경 */\r\n  color: white; /* 화살표 색상 */\r\n  border: none;\r\n  border-radius: 50%; /* 원형 버튼 */\r\n  width: 40px;\r\n  height: 40px;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  z-index: 10; /* 이미지 위에 오도록 */\r\n  display: flex; /* 아이콘 중앙 정렬 */\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: background 0.3s ease, transform 0.3s ease;\r\n}\r\n\r\n.nav-btn.prev {\r\n  left: 15px; /* 왼쪽에서 15px */\r\n}\r\n\r\n.nav-btn.next {\r\n  right: 15px; /* 오른쪽에서 15px */\r\n}\r\n\r\n.nav-btn:hover {\r\n  background: rgba(0, 0, 0, 0.7);\r\n  transform: translateY(-50%) scale(1.1); /* 호버 시 약간 커짐 */\r\n}\r\n\r\n.slider-dots {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 15px; /* 이미지 영역 아래에 배치 */\r\n  gap: 8px;\r\n}\r\n\r\n.slider-dots span {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  background-color: #ddd;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.slider-dots span.active-dot {\r\n  background-color: #42b883; /* 활성 점 색상 */\r\n  transform: scale(1.2);\r\n}\r\n\r\n</style>\r\n","import { render } from \"./KakaoMap.vue?vue&type=template&id=430089d6&scoped=true\"\nimport script from \"./KakaoMap.vue?vue&type=script&lang=js\"\nexport * from \"./KakaoMap.vue?vue&type=script&lang=js\"\n\nimport \"./KakaoMap.vue?vue&type=style&index=0&id=430089d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-430089d6\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=33782c52\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=33782c52&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\n// window.kakao 객체 확인\nwindow.kakao = window.kakao || {}\n\nconst app = createApp(App)\napp.mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue\"] = self[\"webpackChunkvue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(3651); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_KakaoMap","style","id","_createElementBlock","$data","isRegionZoomed","onClick","_cache","args","$options","backToMainMap","role","_hoisted_2","_hoisted_3","type","value","selectedLayer","$event","onChange","loadAndDisplayLayer","for","disabled","selectedEmotion","_hoisted_4","_hoisted_5","closeModal","_toDisplayString","title","_hoisted_6","locationName","_hoisted_7","formatDate","travelDate","_hoisted_8","meName","_hoisted_9","_Fragment","_renderList","emotionTagsArray","tag","index","key","_hoisted_10","reviewText","youtubeUrl","_hoisted_11","src","getYoutubeEmbedUrl","frameborder","allowfullscreen","imageUrl","length","_hoisted_13","_hoisted_14","currentImageFilename","alt","imageFilenames","prevImage","nextImage","_hoisted_16","_","_normalizeClass","currentImageIndex","setCurrentImage","globals","kakao","name","data","map","provinceOverviewFeatures","currentPolygons","currentLabels","districtDetailsCache","emotionMarkers","myMarkers","subscriberMarkers","myEmotionsData","subscriberEmotionsData","mounted","window","maps","this","initMap","script","document","createElement","onload","load","head","appendChild","methods","container","getElementById","options","center","LatLng","level","Map","loadProvinceOverviewGeoJson","setImageFilenames","split","filename","trim","filter","hideAllMarkers","forEach","marker","setMap","loadMyEmotions","loadSubscriberEmotions","loadEmotions","apiUrl","axios","get","then","response","createMarkers","console","log","catch","error","alert","emotions","emotion","markerImage","zIndex","markerSize","Size","MarkerImage","Marker","position","latitude","longitude","image","event","addListener","showEmotionDetail","push","toggleMyLayer","showMyLayer","toggleSubscriberLayer","showSubscriberLayer","fetch","ok","Error","status","json","geojsonData","features","drawProvinceOverview","clearMapObjects","displayedProvinceNames","Set","feature","sidonm","properties","drawPolygon","getRegionColor","has","getProvinceCenter","labelContent","createLabelElement","labelOverlay","CustomOverlay","content","yAnchor","onclick","zoomToDistrictView","getProvinceZoomLevel","add","setCenter","setLevel","selectedProvinceName","provinceOutlineFeature","find","f","geometry","coordinates","polygonCoords","path","coord","polygon","Polygon","strokeWeight","strokeColor","strokeOpacity","fillOpacity","drawDistrictView","districtFeatures","districtName","adm_nm","polygonColor","getDistrictColor","labelCenter","getPolygonCenter","sggnm","fillColor","paths","warn","setOptions","p","l","text","className","element","innerHTML","cssText","onmouseover","backgroundColor","color","onmouseout","centers","서울특별시","부산광역시","대구광역시","인천광역시","광주광역시","대전광역시","울산광역시","세종특별자치시","경기도","강원특별자치도","충청북도","충청남도","전북특별자치도","전라남도","경상북도","경상남도","제주특별자치도","levels","latSum","lngSum","count","processCoords","coordsArray","categoryColors","getRandomColor","admNm","colors","hash","i","charCodeAt","Math","abs","letters","floor","random","fetchEmotionData","item","addEmotionMarker","emotionTags","lat","lng","emotionData","markerColor","emotionIcon","customOverlay","markerElement","a","dateString","date","Date","getFullYear","getMonth","getDate","url","videoId","ampersandPosition","indexOf","substring","computed","__exports__","components","KakaoMap","addEventListener","scrollPosition","scrollY","titleContainer","querySelector","titleText","accountName","maxHeight","minHeight","maxFontSize","minFontSize","shrinkRatio","max","min","newHeight","newFontSize","height","fontSize","paddingBottom","render","app","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}